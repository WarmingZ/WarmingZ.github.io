<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" /><updated>2023-03-15T11:31:11+00:00</updated><id>http://0.0.0.0:4000/feed.xml</id><title type="html">Soloviov Blogüá∫üá¶</title><subtitle>This is my blog on IT theme and more.</subtitle><author><name>Soloviov Ivan</name></author><entry xml:lang="en"><title type="html">World Wide Web üï∏Ô∏è</title><link href="http://0.0.0.0:4000/word-wide-web/" rel="alternate" type="text/html" title="World Wide Web üï∏Ô∏è" /><published>2023-03-02T12:10:39+00:00</published><updated>2023-03-02T12:10:39+00:00</updated><id>http://0.0.0.0:4000/word-wide-web</id><content type="html" xml:base="http://0.0.0.0:4000/word-wide-web/"><![CDATA[<p>From the beginning, the web was made up of simple HTML documents that allowed people to exchange information. This construction worked thanks to the HTTP protocol, which was an application layer of the <code class="language-plaintext highlighter-rouge">TCP/IP</code> or <code class="language-plaintext highlighter-rouge">OSI</code> model. The connection between pages, which had their own address, was achieved through hyperlinks that allowed users to navigate between them. Therefore, the idea and concept were very simple: it was an exchange of HTML documents connected by hyperlinks.</p>

<p>As technology developed, it became evident that simply displaying information was no longer enough, as users now expect more functionality. It‚Äôs also important to be able to receive information that users provide through forms and other communication channels. But just sending information is not enough, it must be saved and displayed upon the user‚Äôs request. Before moving to the next step, it‚Äôs important to understand how the interaction between the client (user) and the server takes place. When a user visits a website, their browser sends an <code class="language-plaintext highlighter-rouge">HTTP GET</code> request to the server. The server receives the request and understands which HTML page to send back to the user. Based on this information, the server generates a new HTML page and sends it back to the user as a response to the request. This way, the user gets the necessary information on their screen.</p>

<div class="mxgraph" style="max-width:100%;border:1px solid transparent;" data-mxgraph="{&quot;highlight&quot;:&quot;#0000ff&quot;,&quot;nav&quot;:true,&quot;resize&quot;:true,&quot;toolbar&quot;:&quot;zoom layers tags lightbox&quot;,&quot;xml&quot;:&quot;&lt;mxfile host=\&quot;Electron\&quot; modified=\&quot;2023-03-03T12:39:12.591Z\&quot; agent=\&quot;5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/20.8.16 Chrome/106.0.5249.199 Electron/21.4.0 Safari/537.36\&quot; etag=\&quot;C4HxK3mM3Nbn8Pm4X3sn\&quot; version=\&quot;20.8.16\&quot; type=\&quot;device\&quot;&gt;&lt;diagram name=\&quot;–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1\&quot; id=\&quot;-bEthxGR6ToUYy-xbZxE\&quot;&gt;7VjbcqM4EP0aP9qFIIB5jJ043qrJbqacrXmckkEGTQCxQr5kvn5bIGFujr0OrtqpGr9gjlqtlvr0RYyseXJ44jiLnllA4pFpBIeR9TAyTeTdIXhI5L1EXMsrgZDTQAkdgRX9SRRoKHRLA5I3BAVjsaBZE/RZmhJflJiaizln+6bYhsXNVTMckg6w8nHcRb/RQEQlOjXdI74kNIzUygg5an8J1sLKmjzCAdvXIOtxZM05Y6L8lxzmJJaHp8+lnLc4MVoZxkkqLplwWC1zZ/fn+I+v32fh/AfNw79mY6Vlh+Ot2vDIdGLQN9swUAtWi3d1FM4/W6YHxnnhqHsQMM0MnD07jstTxn5zzpwl1IeBFU5zeDyv6uJOKJ8rwneEw+AM+28kDbQda64lNAJbLI3TsNmw0+RsmwZE7hrB8D6igqyy0qI9kBSwSCSxGs7fiPAj9eJvwYYFFYKmoYJ+0DAsFJtSWLtQjoC1ggJR7mMapoAJJlUzWIkKSXbPqIyrO0mfOMwmhxqknPZEWEIEfwcRNXrnKgKpCHIc9b4/8tG0FBbVuGje6ThQMRBWuo80gT+KKf+BNdanWYO8DmtKb95nWQynKihLL/U3GAzZgJT+ySQYsO06Jo8Vfo4Ddbc2CCHXXeCExvLsuyQuBVTSmg7jbhvZE89peNw1jYlR+6GO/5E1nRhulwLIRhPHuRELvA4L/s5lBLfco52CfcH4eWc0o/e0axqB2RO4ueDsjcxZLBd9CMgGbyuGXupSZKr3HjU0jrtoK/rbKWLNhGDJMDwZm6284FrdvOD0pAXvVlnBPZcVrikLy9fnL91S8CKr9skCcR1ycepyT6QueOJEsllnrQr4uHxdbuKwle+2obUk8Y5I9t82pMqqO0A8VdVSl1mjG05eTzgh61bxNO2Jp3bpS4N72eTCG8tIeiqTGsPlPVhxQeU+CqWnOXSulTrpMRI0GvKuv2r+sHv8oTFOYugids02vs9HaoUXRov4V3Swpq3sarfcnLMt94maVW+7W4qQd0aRwDwkoqOooEy17etZpC9SF9IoZSn5hWiUw+mJVggUWE37r0a1qTkQ1TqKbk21z98m0UC3yeXr6wsMPT2+XnyLADJ8wWsSN9mPVZ3xgTyE9xSghAaB1DHjBLaB14U+SbtMHnNx8PZsZD/IvkCql9fbsIgpHRUq5Lo0/Tie25Wt+gaibBjVPzP0dpDGBBm21aAMGoTRlZFKq74qaA1ss8nJbSh493kKdq+mV1EwEiIrNEIfuKA5OHtH2W7iwwXgdzv3cTvXCboh7kutLOt4PZ9RjL4Gz71Vg4ec36X5/12aIZG1ujfPvq42j81zmq4uzvB6/Ipcih+/xVuP/wI=&lt;/diagram&gt;&lt;/mxfile&gt;&quot;}"></div>

<p>It is worth explaining that at the beginning of the development of the website, users received only static data - this is the data that only needs to be displayed. However, with the development of technologies, it became possible to display dynamic data on pages. For example, if a page displays information entered by another user, we can consider such a page to be dynamic.</p>

<div class="mxgraph" style="max-width:100%;border:1px solid transparent;" data-mxgraph="{&quot;highlight&quot;:&quot;#0000ff&quot;,&quot;nav&quot;:true,&quot;resize&quot;:true,&quot;toolbar&quot;:&quot;zoom layers tags lightbox&quot;,&quot;xml&quot;:&quot;&lt;mxfile host=\&quot;Electron\&quot; modified=\&quot;2023-03-03T12:44:35.543Z\&quot; agent=\&quot;5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/20.8.16 Chrome/106.0.5249.199 Electron/21.4.0 Safari/537.36\&quot; etag=\&quot;CKU3PHJE1TY04OQiRsX3\&quot; version=\&quot;20.8.16\&quot; type=\&quot;device\&quot;&gt;&lt;diagram name=\&quot;–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1\&quot; id=\&quot;rfapnOhzl1QFCX-cExyy\&quot;&gt;1VjZctowFP0aHsl4AQOPhCyk00yZkg5N34St2Gpsy5XFkn59r7BkLMsESCCT8mJ8tF3pnLvILXeUrG8ZyqJ7GuC45VjBuuVetRzHtu0OPATyUiA9d1AAISOB7LQFpuQvlqAl0QUJcK515JTGnGQ66NM0xT7XMMQYXendnmisr5qhEBvA1Eexic5IwKMC7Tu9LT7GJIzUyrYn95cg1VnuJI9QQFcVyL1uuSNGKS/+JesRjsXhqXMpxt3saC0NYzjlhwzozvjjj4gtEf/V/n43w3dfHm7btltMs0TxQu645XgxTHj5RGFeMJu/yLPw/iyoamjnG6aG0MFxMmD7ctsujhn5+pgRTYgPDVOU5vC4n1a7e6F4TjFbYgaNl8h/xmmg7Jgz1UMhsMfCOAU7mp0Oo4s0wGLbNjSvIsLxNCssWoFKAYt4Esvm/BlzP5Iv/gJsuCGckzSU0G8ShpuJHdFZcShawFpOQCnDmIQpYJyKqSmsRLhQ+8AqjauyJIkTo/G6AknWbjFNMGcv0EW2dpSCpAt5lnxfbQXpdiQWVcToKBBJJwjLubc6gT9SKsfIpmvI5gpxNEc5NtiAM8vE3wA65JwyfAAn1WPWCBK836CExOIsTFHtIkUMk7GlfxpSPE8npWebpHQbOPHORknv3Z5sDwxPLjxsmGUxHConND3UB8FiCNG4ILPgny7mMb4u8fNp4PRsd2psA/sXVuVnG9zbbv/C6pn82137wvPOpYFBgwbqxKTBUORFeEtpivVD30ZO65CDPi52ckafyyQqmsGUGyJ2uFlNJ5wjxpWdNMOpwioDdvKKAy2nm6zu8VGFMRyD5pd6JdBEmlxhQsnG0VSIqMXtnlvz/ZwumI/lqGrmrk/U6dcmqtkCBxNibky00VC57YNklU76GZ9MJz9X3x7jbu9qPHtibTPYv6YqydanV5VU/3+vqs7gRKrqWh+qKpUwX5NVCNLJDo/f5TUAzdUMVjNXatRgf2lV9tHD+AnyeOOx7E3jb6mtxw/3X816eiLuPjur7D0ISkTCVrWAKO6EbYwmZm8ewTKWiQdlyShnO2b9D7kb7KxBtBjUEKOKsDSiMWWi9MFPaFFyWAa/MY6XWFSres1iO/K9YTjEKROtXTmaS2DTi173yoNro67pMo0eU89+J/OY44qed6enw5h6LQsdk9+OpO2TJKl6XDXC5d4ktWvguZOSbYjpRy6+Suy41CKfC+L3BRI96pw5rLxdtG8KL3PKOUT9k9yz6ul4YF30XSO8eA3CHRwfXeB1+/WtEND2G6Z7/Q8=&lt;/diagram&gt;&lt;/mxfile&gt;&quot;}"></div>

<p>Imagine that you are registering on any website. After filling out all the necessary information, you click the ‚ÄúSign Up‚Äù button and the browser sends an HTTP POST request to the server to transfer the data. To enable the server to store this data, various databases are used, which are also stored in the so-called cloud.</p>

<p>With the development of web technologies and selective architecture, it became possible to separate different components of a web application, such as frontend and backend. The frontend is responsible for displaying and processing the visual part of the page, as well as some client-side logic. The backend handles database work and server logic, while JavaScript allows adding dynamic features to the web application, such as animations, form validation, and much more. This selective architecture allows developers to create and maintain web applications more flexibly and efficiently.</p>

<div class="mxgraph" style="max-width:100%;border:1px solid transparent;" data-mxgraph="{&quot;highlight&quot;:&quot;#0000ff&quot;,&quot;nav&quot;:true,&quot;resize&quot;:true,&quot;xml&quot;:&quot;&lt;mxfile host=\&quot;Electron\&quot; modified=\&quot;2023-03-03T10:21:41.514Z\&quot; agent=\&quot;5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/20.8.16 Chrome/106.0.5249.199 Electron/21.4.0 Safari/537.36\&quot; etag=\&quot;anSS0rBzPvFunIa3AGJY\&quot; version=\&quot;20.8.16\&quot; type=\&quot;device\&quot;&gt;&lt;diagram name=\&quot;–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1\&quot; id=\&quot;5uN8DYlxBCpnihB0MevN\&quot;&gt;7Znbcto6FIafhsswPuHDZUJC03ZnpjPsmd1eKrZi1NiWK8uQ9On3EpJshE2AxGToNNyAf0nLkv5vSbIZudP86RND5eKOJjgbOVbyNHKvR47jWJYFX0J5lkoQhFJIGUmkZLfCnPzGSlTt0pokuDIqckozTkpTjGlR4JhLTbVFjNFVZUgPNDPvWqIUd4R5jLKu+h9J+EKqoRO0+i0m6ULd2bb9SJbkSFdWt64WKKGrDcm9GblTRimXv/KnKc7E5Ol5ke1mO0qbjjFc8EMa5Fnw/WtBP/+Of6RZkIZfvi/rC9uRYZYoq9WIR46fQcCrBwpxodv8Wc2F/6umuuCiWjt1CRUcpwS3r9pyMc0oNttMaU5iKJijooKvu/lmdT8V33PMlphB4RWKH3GR6H7cM11DKzBG2TktO0Y/HUbrIsFi2DYUrxaE43kpe7QCSkFb8DxTxdUj5vFCXcQ19GFGOCdFqqSfJE3XgR1RWXsoSqC3nAAplxlJC9A4FaEp3IlwQXtkNZ0TVfHTTuPsBgfII0xzzNkzVFENPE2QSiFf59SqBdL1lLbYgNHRIlJJkDaxW07gh0LlGGzcDjbXiKN7VOGOGzBnpfiZQIWKU4YP8GRzmg2DhO8zlJNMzEUXql2miGZqbQmHMcX3TVMCu2vKpMcT/2SWeG/OZDvqZLLMsMuyzGBSOaHFoTkIPYYlGkszpf+0vs/wTaOfjoHh3fa23Ab3x9bGx+54b7vh2Aq6/tsTe+z7p2Jg0sPAtjFFcin2RbgqaIHNSW9XTuuQiT5u7eSMPjabqCiGrsyIGOH6bqbhHDGu+0lLXGhto4EcGk46G/heV/fkqNYYzoD5pRm+zzR1h2+UrBNNLxFb63bgbuV+RWsWY9Vqc+feDuSFW4G2+gITk2LeCbRmqBn2G7Dyj8JK2XX2WCn8/3isvGggrCbWu2Klh/4SVimgU+5cwNWhH93r6taxC/tFYE7mJDr0bBWcbCMP3ryRD3UknzGI+3cdxV8g9cWEf29Iwn2QvMbv23/v/ul6/U08Iu8kYI+CcuGEZqURjglxsDIsjDvPnwaGPZjKHWlKM8rEsRc/oLoxptn3bnG2xIJZ87xqO+q6pzlsUV11i/H+RBiefBXGNVdPD862k6j9BJ21NOjJkjAcu96p8iQ6RZ5M5/PB2A2u4qoaBdcfWJ8P1ufPtT7pDMv1lyGx/vlB9XlRbbsTg2o7OD+s+15HD/QC43gTd1O173B6wDPkaw+aJ3yytPVsP2unX/dg6eh3kTvinPq5svty+gOi94PIj8ZeYC40jjXWT7XHstQTLjLfvVreQHTBZftvnKze/qfp3vwP&lt;/diagram&gt;&lt;/mxfile&gt;&quot;,&quot;toolbar&quot;:&quot;pages zoom layers lightbox&quot;,&quot;page&quot;:0}"></div>
<p><br /></p>

<h2 id="asynchronous-requests">Asynchronous requests</h2>

<p>All pages in our application have common components such as navigation bar, menu, footer, etc. Thanks to asynchronous programming in JavaScript, when we send a request to the server, the user‚Äôs browser does not refresh the page but remains in a waiting state. Now the server will not send us regular HTML pages, but only the data we requested (for example, it may be a file with data in <code class="language-plaintext highlighter-rouge">JSON</code> or <code class="language-plaintext highlighter-rouge">XML</code> format). To display this data on the page, we use JavaScript. Therefore, we do not load the HTML page every time, but only the necessary data, which reduces the page loading time and improves the speed of our application.</p>

<div class="mxgraph" style="max-width:100%;border:1px solid transparent;" data-mxgraph="{&quot;highlight&quot;:&quot;#0000ff&quot;,&quot;nav&quot;:true,&quot;resize&quot;:true,&quot;toolbar&quot;:&quot;zoom layers tags lightbox&quot;,&quot;xml&quot;:&quot;&lt;mxfile host=\&quot;Electron\&quot; modified=\&quot;2023-03-03T12:51:13.936Z\&quot; agent=\&quot;5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/20.8.16 Chrome/106.0.5249.199 Electron/21.4.0 Safari/537.36\&quot; etag=\&quot;fT92Cw9rS6ABS0sg-j-l\&quot; version=\&quot;20.8.16\&quot; type=\&quot;device\&quot;&gt;&lt;diagram name=\&quot;–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1\&quot; id=\&quot;DjOPru4-3dTt7Z5hNzLw\&quot;&gt;7V3bcqO4Fv0av5yqUJJAXB4TJ+6unr6kJn1On1cZFJtpjBiBk858/WyBwICwY6ftxKkiRcW2JITQXkv7JuyJPV39+iBZtvwiIp5MCIp+TezrCSE4cDC8qJKnqsSzg6pgIeNIN9oU3MX/cF2IdOk6jnjeaVgIkRRx1i0MRZrysOiUMSnFY7fZvUi6V83YghsFdyFLzNIfcVQsq1KfeJvyjzxeLOsrY1ff34rVjfWd5EsWicdWkX0zsadSiKJ6t/o15YmavHpeqvNmW2qbgUmeFvuc8DUI09svf1yQD963b99myTe2/t+F7uWBJWt9wxPiJtDf1b2AbmHUxZOeCvfvtagrLvJSUJfQgJAMhH21qVezzMLuOVOxikOouGNpDi9f7trN3YV6vePygUuovGLhT55G9Tjmsm5Rl8AtVoOri0lnnESKdRpxddcYqh+XccHvsmpEjwBSKFsWq0RX5z95ES71h3ANY5jFRRGnC130V7xYlB0T1bgWoaqB0RYxAOUyiRcplBVCdS3gSnGhwB6gZnBtIdUzDmfzX60iLbQPXKx4IZ+gia51agBpBrlIf37c4NF2dNmyhUVSFzLNgUXT9wYm8EYj5QDUEAM116xgc5ZzQxgwZZl6G0GDvBCS7yGS9ix35KPEPmOrOFFTYWJqm0zUaXpl8Y8jE9ftysTDpkzogEjcU0nE/m0e48DgccWvyyxLYE6LWKT7MhAGDOszr2RZiV+s5wm/acpPB4HjC9vpCRuEb6HWHzZEj23fQp4pfkyx5bongoAzAIG+XNLoUulE+JSKlHfnfLNson3m+bCFs5DiZ6NAVTUMZRarGyyv1pV3wWRRj1NkPK3LWidsFSuPOvrcFOozDK3LJE8A8g9dK2BIZvoKtyIueVYvEL1F27N7zM/FWoZcn9XW2v2OHL/XUW8sMDELXhgdlRBqbvvlqKIHoUpL6+xRpdH/7lHlBEdCFUWviirXQNXlp8v/Q8mf/O81z4uTrlwtDYGJ/jwViZBKT/F7ti513C4oHQbSU65mWp6gkChxOyK92NMkORI0bb8Hzb6psy80cfBMR1ugCVPMnlrNMtUg3z5gsuU6G6RXPfbOrrsX9/c5Pwk3arntWnIXAPlsf9OmcY/ZvO4BTXbhqXEd9ORQxwRTMAAm3FdzR7Nu/IFJ6Ri4L/E5P919+7rdzzxWyXH91a0LUWfVGViVKm1pLnSd9fIjTx64cqH2XifvYRkzS3tu8LBfZgJ4NyGet9jfDJ7BVnhmg87XChaxOK08L6QdL1R6ZA9Mxgxe0/WKSwBw2SQVcsWSgVYcnOoLlsP7LQ1B6hVG+rVJnPKLenIGT73XoFCVMHK2UjLT49/ghKCvHO65V98eQeNiumakKExYnndmJsMmTw/1Zc0L6X687aRsirN+2SjBM5JgPcp0nmeDn9HmpLkQP1tdVNNARwi8ewiU/eQZzNfQxVXAil+AxVMqjOgiL5Vpe8BHhB/au6gGVzXucUEa0Xh8NL4cnfsCthlEHBlLa/MZdSZ8OkJ8hPh7hHjC0sVa5Ye3Av0Te2Aj1Eeov3uo8yjWCb4tSC+WsWyv+CPUR6i/T6izdbEUcjvSP3I5hzuGsrtwGSdR0Rn/CPkR8ufhOV4fugb3ws5DQWUVq41YvmySafX+jdWvhdrfZ82FKABTLLOkLLfbXUkdIqaTfoi5SbL2s7TtkLFu1I4tT4g9w8E0CCbD0XCmg8gJv1cD6MeWV3EUJbwScxini89ls2tc5wb1eN1Ni7o2YXOeqO1nizIk3xtiVStkxGWv5vhx7DpNaxHaycPU8etWnNvzLGpGuuvo99ED3Xhox+AJNwS8YbL26JsEzjZZ6/bh8tJkrdHRiZK19XXePlmLvbfP1l7gXrrWodSi7S1qroEuGw2sGpT09pMcLz82NE2/kb/dYz/jwL7ksNEwm0K7miFTY3/8/uUznHNbBQCOn8l9qbbp6bBtmnNAyR57r/O+eq/hyEEJ3FdGKMbmpqR9mXzgbR9McLtLb2oqC+IQiwzsOHX6G7uOx2hzR8ZUclZwdTE1P1L8pSzE/hQO4XLIbGwxpW0DNJ91j8g0CHuMwB65cqa90/rd+n16LFm4XEv+QbH22lGOidIpXN48cKWpBqyXSxkqwodKj6FrtgYZcFlfptSn0GhZFBnUU7VEUZh/9U81yK2FEEA+lsW5FYpVWRHmZdOZ9sTgbecilFy1LtPh66kt2YYrBzEaU8/Cjo+RPmq11Nmi4VrUc6hPXZvaNGhIdHz8mls2bivIKvnBDKixL3n5+gTiK62uTORxIWTM89KFfuAWvH5f8qfmFGB2wcC3lnl1nioqvU29dKA8BmGyge7itHSZVc2cF0X5LEwoItWpkAuWxnm5Bz+39qFUjxKDDOvxROtB0+RuMXFIpQ3rhpFMpyCTVgDgQnjYJzZBjoMD36POsEJwg83fgDK1PYsExMee6wWU+miHH/F7qrV+Ysnkmgo8sVVjYOVrI4CmzcNB0+3+fth0+8/zcZHOld5aRdHA9Xw02a2iDGd2ZNVxWUV9C2GMnMADZlDXM52ms1JgGJmhmB8wLSueqETOTteEyVDDqu8qlKxSfwNKpBNPM+N9cKozDS5nsy41uvG/fgxnl+IZ0X5CtHu+5bVWf4+aaPcDy/ehUX0M+Be2DYQIsIeJh0qV5JwM7cRA+x/K7hoVx6g43phKGOwx7LZWfXLumsN8XPjq5vvlTjwD2qbTG1Su7oeCugZxyNMNbobUxnMw7mqxEdSnAHVd69qWG9DA0YfffWJwD8wT18IBtml9OENPRL8e5s3no+8Kli9/x1KaeTN/FrzIUrq+ucE37oGWUne5Hy2lV1reHQR2kB14XoAQpWTA2z4zU8l8aPua56GMs2qP12i1jLBWmCVWHUHyA1rbBOdrtJj5mR9Lpkz8uAyfrjIhC1blEssoasZFlqjwaSHg389UyWK293LvnPFyP4Zc3yDkalvI9l3PQbYN6zgy/WUQGLjUwIjmMOkSUMtud0NOxhYz4b4JuWZcruI8V9mEt9cGe+XnnBHfp8U3gNFqGyfnrgzM7PN/8zJlxsKQ5+cK69F2f21Y29jqGN1nD2wzLf0nZ5G6lvpORPQo42L7t+xtvnhtW0zfsEzApfHKb0rrmiOOiegmTr/vBtznkF8C4lblwJVbYl/LasKbDj/36nft7G1YhEYWHT0W5FkEEbdl2XRCQTZ1LU0LF4Gh5Jv+MdDH8Xx7c5gU8y3itxMSp9vnZSajNcNEmjztQa2ux9D3EdCMzIZdAP96emO/M1rt95DAu9Zg50e3Lls8P+jSzSNWZ9eGmaf2LB/UFaLNMeCIWIHjeBTbPgYN6Lj+yehmZqm/qgkceTby7Lx55gcWRcRziWOjwA7Mr3k9K5qZ6fHb9TyJn01w9HjVMwd3bxk0doo0Cb4Xkco5mAjv0tg7IyLUz4sQYrkUB7btIZXUsweeFwmUfQZ00AceADsQwnbAf3JJ4NtOkyc5AdjN/PWUpaH66YEXuv3bIq9vBexxhT/KCu9QC5Dou/XhdFb4s4E9fNz8DkT1aNrm1zTsm38B&lt;/diagram&gt;&lt;/mxfile&gt;&quot;}"></div>

<p>From now on, with the introduction of asynchronous requests, we have a clear separation between the backend and frontend components. Previously, we used many HTML, CSS, and JS files, but with the advent of asynchronous programming, it makes no sense to store a large number of HTML files if we can simply replace data on the page using Javascript.</p>

<p>These applications, which have only one HTML page, are called Single Page Applications (SPA).</p>

<h2 id="frontend-backend-and-web-server">Frontend, backend and Web Server</h2>

<p>The web server plays an important role in serving static files. Typically, it is configured to store static files (such as HTML, CSS, JS) in a separate directory, access to which can be configured through a configuration file. After that, when the user‚Äôs browser sends a request to get a specific file, the web server checks if such a file exists in this directory and, if so, returns it to the user.</p>

<p>If a user‚Äôs request is related to dynamic content, such as displaying a list of data from a database, then the web server forwards such a request to a server program (backend) that processes it and returns a response in a format that can be understood by the browser. After that, the data returned by the server program can be displayed on the page using JavaScript. Thus, our application becomes dynamic.</p>

<div class="mxgraph" style="max-width:100%;border:1px solid transparent; margin: auto;" data-mxgraph="{&quot;highlight&quot;:&quot;#0000ff&quot;,&quot;nav&quot;:true,&quot;resize&quot;:true,&quot;toolbar&quot;:&quot;zoom layers tags lightbox&quot;,&quot;xml&quot;:&quot;&lt;mxfile host=\&quot;Electron\&quot; modified=\&quot;2023-03-03T12:56:47.312Z\&quot; agent=\&quot;5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/20.8.16 Chrome/106.0.5249.199 Electron/21.4.0 Safari/537.36\&quot; etag=\&quot;wy5PZ5o2cjdtvo9Antny\&quot; version=\&quot;20.8.16\&quot; type=\&quot;device\&quot;&gt;&lt;diagram name=\&quot;–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1\&quot; id=\&quot;rfapnOhzl1QFCX-cExyy\&quot;&gt;7Vpdc6M2FP01nmkf4uEb/Bg7cbI7mzZTp5Np32S4BjUYUSHbyf76SkZgg9j4I5DY2+QhhiPpgu45urqS6Jmj+fMNRWl0RwKIe4YWPPfMq55h6Lpu8R+BvOSIaw5yIKQ4kJU2wAR/BwlqEl3gALJKRUZIzHBaBX2SJOCzCoYoJatqtRmJq09NUQgKMPFRrKKPOGBRjnqGu8FvAYdR8WTdkf2bo6Ky7EkWoYCstiDzumeOKCEsv5o/jyAWziv8krcb/6C0fDEKCdungf3I/vozokvE/r7448sjfPn6cHNhOLmZJYoXssdjShIGSSDfmr0UrqBkkQQgrOk9c7iKMINJinxRuuLkcyxi81gWl70VNzNucYzmOBYiGJE59rnlCUoy/nM3kRUk94bH7wOUReWTMkbJU+l9kyNLoAxzji5jHCYcY0Q8PXsC5keykb+gSxhjxnASSugfHIbrvhil0RGJCeVIADO0iLkbhylQPAcGVHQtb6txmIg7Jl5/IG5V30s6xJvB8xYkubgBwq3SF15FltpSFnJc2Ja8X21UZhV1oi2Fma4EkVR2WJrekM8vJP8HaEFXpNAznLVTBD1i8ORkc/TfhVDtUKWyLOJXofh9hKmoAJwNWpjjb5dbzKu8UWgHsb6tyhZINK0qi85AZVG3GljU7a5YdBtYrPk35A5O9+99GVzRtLCgveoV3at5xWjwitbkFaMrrxhdaPv24e4bL7oXU4i0NqVF4S+T+8tfVfjExkBzJFW18arUdg+XjyPeVIj/OmlxZqt4fuc017pfZanb1y3Ds93iv1UZfuagP6j8KYPRtPtuxYLdQJHTEUOWwtBo8vNRVJvuT5wT+3/ByevDxjVOixM1U/8JI1ltmJwaB97u5Io7NRWXyGdiafGuHBycv7o1d5u24u+m7NXparYe7PYvX5leinU9vyMpJFVvbuSv7ePBI1aMxTJUIPxVxlh0cP20/dYWEFT2G15NlZqWfwVGIUYML6u7FE18yCfcE7zOcwtZGDXmBzVKM7KgPshW27sKNUOmucMQQzQEphhay6Ps9hsWrZoimduHh3uO3ABTxcO9/w1NIa7KBsns1+dsAW1Ii+c4CISNIYUMf5frIEF6Kvq17qk97NlXLYbOYii8eTV2ofUNz3VbkY3hVcguvV9YILNZBt3w3LQ78ePQkJAETjQ0ZHxEsFoIW2NbDc4ufNS3M44OH3VDHYcPQw0fnzNOJ5Kx9SrTnnakZOzBDkNdS0aNROupRrtCDJ3zjFOOhZOacnTjo6acIhR8TjmnGD9cq6X4oRjqOn40bUn+/ttZR45ipHxGjjxZVSlu4biheoi2OVIYIv9pfV57lmcN7Z+sOlp1gDceyg0aIlV3h3K6uqEqsoUpykBho9hACniFjBEKnW4iNZOydR7vtbTTZNWj7n5bTd1Roh6UXqZpzH3BMEnUaBzHOM0gd3bOD1nwoHZd4t1x1D4bjjKZqmy478rGHjurJ7IO0w/ItWROeG65llNPkTytbx6Xbbn1Bb73vtmWftiW8kcm8YcI60yTeEVYTnvCqh9KHC2snvgErvgqL6+++bbRvP4P&lt;/diagram&gt;&lt;/mxfile&gt;&quot;}"></div>

<p>Our web server is responsible for serving static files, while our backend handles the business logic and interacts with databases. The backend server can be used by many clients, such as mobile and web applications, as well as our partners through an API. We interact with this server through requests and receive responses in a request-response format.</p>

<p>Now, Frontend has evolved from just pretty buttons to a full-fledged application where the web server is responsible for serving static files. Backend, on the other hand, is a separate application responsible for business logic that can be used by multiple clients or partners, such as mobile and web applications.</p>

<h2 id="backend">Backend</h2>

<p>In the Backend, there is the core of the application where the business logic and database are described. Typically, this is a relational database that has tables with structured data. However, as the application grows, document-oriented databases may be needed. Additionally, for quick access to data, a cache may be used, for example, to store user sessions or frequently used data.</p>

<div class="mxgraph" style="max-width:100%;border:1px solid transparent; margin: auto;" data-mxgraph="{&quot;highlight&quot;:&quot;#0000ff&quot;,&quot;nav&quot;:true,&quot;resize&quot;:true,&quot;toolbar&quot;:&quot;zoom layers tags lightbox&quot;,&quot;xml&quot;:&quot;&lt;mxfile host=\&quot;Electron\&quot; modified=\&quot;2023-03-03T12:59:47.808Z\&quot; agent=\&quot;5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/20.8.16 Chrome/106.0.5249.199 Electron/21.4.0 Safari/537.36\&quot; etag=\&quot;YFEdEFjmlYfUkkTO6UOy\&quot; version=\&quot;20.8.16\&quot; type=\&quot;device\&quot;&gt;&lt;diagram name=\&quot;–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1\&quot; id=\&quot;rfapnOhzl1QFCX-cExyy\&quot;&gt;7VnbcqM4EP0aP8bFxWD7MbGTzGxtqlLj3UrNvkzJ0AFtBGKFfMl+/bZAGAS4liR2JlMVvwCtltTSOd1H4JG7SPa3gmTxHQ+BjRwr3I/c5chxbNue4EVZnkvL1J2XhkjQUDvVhhX9F7TR0tYNDSE3HCXnTNLMNAY8TSGQho0IwXem2yNn5qwZiaBjWAWEda0PNJRxaZ0509r+BWgUVzPbvl5fQipnvZI8JiHfNUzu9chdCM5leZfsF8DU5lX7Uva7OdJ6CExAKod08B7k9z9jsSXyr4tvXx/g629/3F7YbjnMlrCNXvHI8RkOePXIcVwMWz7rvfD/2fCq4SIvkLpEB8fJEO2rul1tMwnMPgue0AAbViTN8XK3arr7kbquQGxBYOMVCZ4gDas41qLyqCy4xjK4yuwYcTqCb9IQ1LJtbN7FVMIqKyPaIUvRFsuE6eb8CWQQ64dggzHcUClpGmnT3zSKioEd5VxhqFowWkmRKZeMRinaJFdDc5yJSsX2uXUIromSBk71hn3DpFG7BZ6AFM/ooludqWaQTiGvet7VhPQsbYsbZHR9bSQ6CaLD2DVP8EZT5SW08Tq0WRJJ1iSHDhq4Z5m6DdEhl1zAAEya22wApHC/IQllai+6pDoGiuqma8vsNKBMZp4ByszvA6WLiXc2SKZvzmR73snkMsMus4zhpkrK06E5iBFjiYYSzBJ/vlkzuD7Yz8eBM6A9scZz3wDc9ydje2odfnYHftudja1plwK2Z499/1w0mPfQoI1NGl4qacSnlKdg7ntdPK0he/2y8ikFfzroqGrGUG6oWmExm4m5JEJWcfIM0srW6HAUWggNWe8COzBNBTCk/dY8DPSBpme457TINc0bzzZL98xtpX/ONyIA3asp3v83ULuO4MZEIDsDFRw6LPv1tHL7zgnHaaXh+vC00vT/5WjlnIpW7YHem1Z91eqFomWd5vh5x9OILwefMUOSxwc6841kNIXF4R3EMslP9GEkQD7hEde9YmQN7J7ntJDURkN1fPm95bDmUvLk6Pmm0thkH6nXsPEO1oxHPB8nalXhGl0yhSGI6y1Olfel4RdgW1BjmwqKglI+LzjjQuk4PJJNCRFmTGXVmYTThxRq5yrBXn3INnP7RCdqb96ivdM9vLl2X/qOnTPp9sTuyYRP3f5ZBfYYQV5cYFvvbjPrfQvsxPmk1Qei1cxkw3T+Slr5VotW9jvT6u2fjXp0u5TabxDSfKgMkzwrFfeR7hVLm9QtFK/YD+9q5C37dJgmxec/Q++c2r6kSYQRMLpWu5QHBPC6IEEMP4oof9wLHm4COc630RCJPfay+hZpzUBQhBOEepUuE82qVqC+pEVFBtf+J5BPf9Ki8WTYt4+qGJ1ePGefVe7jVDnfbdGj/bFjsHi2VHjqtQY6d5X7/JbygWjVYcPkteLZ5ufJXnrxsf4/p3Sv/xVzr/8D&lt;/diagram&gt;&lt;/mxfile&gt;&quot;}"></div>
<p><br /></p>

<h2 id="cicd-pipeline">CI/CD Pipeline</h2>

<p>When our application becomes more complex, we need to automate testing, code style checking, and project deployment. To do this, we use a CI/CD Pipeline that automatically performs all tests and checks, as well as deploys the application. For deployment, we use containers that have an environment set up for quick deployment of the project. This helps us automate the deployment process on different systems and servers and not have to set up the same thing every time. For example, this website uses Ruby 3.2 and Jekyll 4.2.2, and the container helps to save these settings and automatically deploy the application.</p>

<div class="mxgraph" style="max-width:100%;border:1px solid transparent; margin: auto;" data-mxgraph="{&quot;highlight&quot;:&quot;#0000ff&quot;,&quot;nav&quot;:true,&quot;resize&quot;:true,&quot;toolbar&quot;:&quot;zoom layers tags lightbox&quot;,&quot;xml&quot;:&quot;&lt;mxfile host=\&quot;Electron\&quot; modified=\&quot;2023-03-03T13:02:29.632Z\&quot; agent=\&quot;5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/20.8.16 Chrome/106.0.5249.199 Electron/21.4.0 Safari/537.36\&quot; etag=\&quot;U4IhTUWDJiIocwEzjrdO\&quot; version=\&quot;20.8.16\&quot; type=\&quot;device\&quot;&gt;&lt;diagram name=\&quot;–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1\&quot; id=\&quot;rfapnOhzl1QFCX-cExyy\&quot;&gt;7VnbcqM4EP0aP9rF3eYxsXOtTVVqPFPZmZcpGdqgCSBWyJfs128LhDEX15LEzniq4hdM665zuk9LDMxpvL3hJA0fmA/RwND87cCcDQxD13ULH9LyUljGplsYAk59VakyzOm/oIyasq6oD1mtomAsEjStGz2WJOCJmo1wzjb1aksW1UdNSQAtw9wjUdv6RH0RFtaJMa7st0CDsBxZd9T6YlJWVivJQuKzzZ7JvBqYU86YKP7F2ylEcvPKfSnaXR8o3U2MQyL6NLCfxPdvIV8T8WP45e4J7u6/3gx1s+hmTaKVWvHAcCLs8HLJsF+ctnhRe+H8s2JlwTDLkbrACoaRItqXVbncZuLV20xZTD0smJMkw8fDfL+6E8jnHPgaOBZeEu8ZEr+cx4KXNUoLrrGYXGk2avM0OFslPshl61i8CamAeVrMaIMsRVso4kgVZ88gvFC9eCucwzUVgiaBMv2iQZB3bMjKJYayBGcrKDLlIqJBgjbBZNcMR6JCst3VdpPbR0kBJ1vDds+kULsBFoPgL1hFlZqlLygXssfqfVMR0nKULdwjo20pI1FOEOz6rniCfxRVXkMbu0WbGRFkQTJooYF7lsq/PlbIBOPQA5P9ba4BJHG/JjGN5F60SXUIFNlMxZbJcUCxJnYNlInTBsXuwuRkkIzf7cm62/LkwsMu0jTCTRWUJX19EGeMIRoKMAv82WoRwdXOfjoOnABtSxu5Tg1wx7FG+ljb/fQW/Lo5GWnjNgV0Wx85zqlo4HbQoIlN4l9IacS3hCVQ3/cqeGp99vp14VNw9rzTUVmMU7mmcoX5aHXMBeGinCdLISltew0OQgt+TdbbwPZ0Uw4R0n5dTwa6QFMjPDKa+5rijd0I3ROz4f4ZW3EPVKt98f6/jppxBDcmANHqKOfQbtlvp5XZlSccppWC6+xppej/x9HKOBatmh19NK26otUrRUs7Tvr5wJKAzXrnmD7Jwh2d2UpENIHp7gyi1clPVDLiIZ8wxTUvI7KA6JFlNJfUvYIyffmrUWHBhGDxwfym1Nh4G8hj2GgDi4gFLBvFclX+AqukEkPgV2scKutyw1uI1iD7risoCkrxPmUR41LHYUlWBUToMaVVeRIO71OoKpcO9uYku+7bR8qobbdBe6OdvJl6l/uOjBPptqV3eMKnbv+uAHuIIK8OsONGR9rHBljL+KTVGdFqUmfD2H0jrRytQSv9g2n1/mujDt0upPYL+DTrK8MkSwvFXdKtZOk+dXPFy/fDvhzYsy4dpnF+/VfTO6Oyz2gc4AwiupC7lHkE8DklXgg/81n+fOTMX3lilK2DPhJ76LD6HmlNgVOEE7g8SheOppUrkDdpQe7BVf0jyKdjNWhs9bv7KIPR8cVz8hnlzifKOWaDHs3Ljt7i2VDhsd3o6NRR7vMu5Yxo1WJD83a7t3g2+Xm6Q+8t8/6OPW+7HN7H3398vbln38SwK9N/90Xtm8680zupZ9hGe6SpPMGe2ReWI2iVadXv6V2346jndrDW0Q4TtK9YdcLfIyPf7Zj0y9+Q4syY9wxcZTXHSBgarqtrmt1GwRnZbhuH5tVWDxzwtfqsWnht9XHavPoP&lt;/diagram&gt;&lt;/mxfile&gt;&quot;}"></div>

<ul>
  <li><strong>CI</strong> - <strong>Continuous integration</strong></li>
</ul>

<p>To better understand a CI/CD Pipeline, imagine yourself as a developer who has created a new feature and wants to make sure it doesn‚Äôt break the application. There are many mechanisms for this, such as building the application, running tests, and possibly running linters to check code quality. Although there are many ready-made solutions and scripts to run various tests, considering the human factor, we cannot guarantee that the developer has run all the checks without missing anything.</p>

<p>That‚Äôs why we need a system that will automatically check and run all tests, and if these tests pass successfully, all changes will be added to the project.</p>

<ul>
  <li><strong>CD</strong> - <strong>Continuous delivery</strong></li>
</ul>

<p>Next, if all changes have been successfully incorporated into the main project, the project is built (if necessary) and the build is published.</p>

<div class="mxgraph" style="max-width:100%;border:1px solid transparent;  margin: auto;" data-mxgraph="{&quot;highlight&quot;:&quot;#0000ff&quot;,&quot;nav&quot;:true,&quot;resize&quot;:true,&quot;toolbar&quot;:&quot;zoom layers tags lightbox&quot;,&quot;xml&quot;:&quot;&lt;mxfile host=\&quot;Electron\&quot; modified=\&quot;2023-03-09T10:52:53.632Z\&quot; agent=\&quot;5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/20.8.16 Chrome/106.0.5249.199 Electron/21.4.0 Safari/537.36\&quot; etag=\&quot;KrIITMpWxfsgy5aHASAa\&quot; version=\&quot;20.8.16\&quot; type=\&quot;device\&quot;&gt;&lt;diagram name=\&quot;–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1\&quot; id=\&quot;gNfr0bEEAWJMN5F-4Axo\&quot;&gt;7ZpRk5s2EIB/jR/PgyQQ5vFs3yWdadpOnWmeVdCBEkAUxNnur+8KhA0G5+z0nCMtT8BK1kq732pXmBlZJbt3OcuiDzLg8QxbwW5G1jOMsY0WcNGSfS1BlkNrSZiLwMiOgo34mzcdjbQUAS86HZWUsRJZV+jLNOW+6shYnsttt9uTjLtaMxbynmDjs7gv/SQCFdXSBXaP8vdchFGjGVGvbklY09mspIhYILctEXmYkVUuparvkt2Kx9p6jV3q3z2eaT1MLOepuuQHD84vn1PvZ/STX/7xKVsG+brY3hn3PLO4NAs2k1X7xgKRSmK4QzOyPCxBPwSsiLge24IHFoswhXsfJsNzEDzzXAkw471pSEQQ6BH1GJkeOdmFGpl57SRcX/WwmhRrTom+1xw5YKllKpUfGV3FF14/VFNSufzCVzKWoHUd8CdWxmCO5ZOI40aaylRrBn2BgPmdiI0FYL58d9a06OAwQJ3LhKt8D13MD+5Qg6vB3LbM8/bIDKBhhFELGNfImOE0PAx+dCXcGG9e4VnkvuzaMJdldnb9JqTYn01361q7nFgFL/pWIe6AUQi5mVXGA3z5sczT+zb1SGupmt9zphXBXqmDACy8xs4p+X6ZP/NHoZRIQyP6LMKwWgUejoBzwfJvIuMr8PW5aIeDS+eeQx24IR4ilj2AAcKwDyDHXXi2S+jCvhUU3gTFxVDkUjElpF4NRJN1E0yaYTwyt2xiuwtMrQX1HNLZTpA711DomgJXmDj9PXc8kA0xRutUJcFIbdjoX6VsGu6KqiS6hw4YZbvK3E27rmeY3/3NSibCh4YNSwu4fNi0u9NQX3+LWdrohqXU6uumHvaQINKg4lujtI2E4pus1rkFcEF2LjCuztIvklcP0lRhmmYJUxFK4+DdFMS7RTeRIUznBPdpwwO5jN4qldmX5vfL7fQKGd/pWorY/ZSPh1L+7eyE0Ggib1kKOH5ModfD+CxPJ4FHB7b47xp0ztsX1faJTQ7h9HZVNZ3qp+9QVDs/Uk19welzQuIGJfUZSP6LFXXzdmEEiX0lA/7/zetfz1eL01djb53DEX6Jm29BoBmiyPTp6pvQqwf6yAvVYqker6tjQqyL2KHcGQ9jZNSM/c5jzgo+YXYVZg4eHWZDLwHGg9maZ7HcT5RdRRkd32Y2dOodD2W/ZjxnatrMrizLmr+wR4MZ7r+oW4HHRFrKUkMk4AQIBqtOSqfeAzuorosuPzjmHCAzL2S0cTMJmqrFOcuZs9ZjlUrWIA742Phs4BioeTNfNBDLPD+yRMTa5P0IeRW3nqQoOuDVwzvZtledm3m1X213vBrwWMCK95NLLy076MDHBdh7HZ/C4/GLlKqt9WEPefgH&lt;/diagram&gt;&lt;/mxfile&gt;&quot;}"></div>
<p><br /></p>

<h2 id="microservices">Microservices</h2>

<p>We can observe the growth of complexity in our application, where the core of our system is responsible for the business logic and consists of a monolithic component that covers practically all functionality, including the website store, blog, registration page, and more. Such an approach is not practical.</p>

<p>Let‚Äôs suppose that a developer is working on a user registration system. If they make a mistake in the code, it can cause malfunctions in the entire system. This makes the development and testing process even more complicated and makes the system less scalable and adaptable. To prevent these problems, the monolith can be divided into smaller components that can be developed and tested separately.</p>

<p>Introducing a microservices architecture allows breaking down a system into separate services, each responsible for its own functionality, such as authentication, store, blog, and so on. This enables each service to have its own CI/CD pipeline and independence from other services. Thus, if one of the services is not working, it does not affect the other services.</p>

<div class="mxgraph" style="max-width:100%;border:1px solid transparent; margin: auto;" data-mxgraph="{&quot;highlight&quot;:&quot;#0000ff&quot;,&quot;nav&quot;:true,&quot;resize&quot;:true,&quot;xml&quot;:&quot;&lt;mxfile host=\&quot;app.diagrams.net\&quot; modified=\&quot;2023-03-03T09:19:40.232Z\&quot; agent=\&quot;5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.3 Safari/605.1.15\&quot; etag=\&quot;nvUQjx_Rf-Ysq2Ixd6J4\&quot; version=\&quot;21.0.1\&quot; type=\&quot;device\&quot;&gt;&lt;diagram name=\&quot;–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1\&quot; id=\&quot;rfapnOhzl1QFCX-cExyy\&quot;&gt;7Vpbc5s4FP41foyHi8HmMbFznc1Opm4nbV86MsigDSBWyJf2168Eks1FJNjBjrv1S2IdXRD6vnO+I4meOY7WtwQkwSP2YNgzNG/dMyc9w3Acg/3lhp+5wXLs3OAT5OUmfWuYol9QGDVhXSAPpqWGFOOQoqRsdHEcQ5eWbIAQvCo3m+Ow/NQE+LBmmLogrFufkUeD3Doyhlv7HUR+IJ+s205eEwHZWLxJGgAPrwom87pnjgnGNP8Vrccw5Gsn1yXvd9NQu5kYgTFt08F6pt++BGQJ6PeLT/fP8P7h8+2FbubDLEG4EG/cM+yQDXg1x2xcNm36U6yF/e8Cy4qLNEPqkjUwjISBfbWt58sM3HKfMY6QyyqmIE7Zv8dpsbnt8/9TSJaQsMor4L7A2JPzmBHZQlrYO+aTk2ajNE+D4EXsQf7aOqteBYjCaZLPaMVIymwBjUJRnb5A6gai4C7YHG4QpSj2hekf5PvZwAZvLDHkNWy2FDGmXIbIj5mNYj40Zk9ClLPd0Vgxwkswy/rzLgSydSuWMQW0UGbOA4tl6KFiMcRsZfh78ZEF4wvVdUYIkvCZwnXBJBhyC3EEKfnJmshayVbprkNRXm3Jb8s2QYH41kAYgXA4fzP2lpPsh6DlLhS1ahSd8EUDKawhz/BJ+E+PNUgpJrAF/kVIS2TgHLsBEQr5WtQJ3EQA3k3EsVE3oAwcqwSKrul1VCwVKAfDxFGEjQoWzIUveQBmpRjHsLzqWxfV2qz0bk5KCX7ZROvMjWLvBvE3zJ5WRpwCQuU8cQJjaSt0aIQQeiXxqAPYEh8CQ0DRsiw5KtDEE54wymKz4IdVcVpnVME9xQviQtGrKBFvDKRrWmUktjI+pLWRMhJt3nt/XpkqOWrmlcDr5Hkl+P/b8crsilfmR/NKFa92S3N0rZs05xHHPp60zmU8kAYbPuMFDVEMx5tcVyuzHwghchmhWCrFEgYwg+ETThFFuFQhpeuvSoMZphRHjdom9TVa+zzb76/gLMQ+TvsRfytvxpokHENIrpfsUanKD+9guIR87LJWMknJy2McYsI1HM7BIoeIuYy0Cldij/cQ3DaWHrZ3Mld27le9s71w21rFgRTZlKmr/LdvHEi5B7rCE87K/UERtpEgO0fYUWWgaup34AA7MM60Oh1aWU6FDdXNWVta2XplIPvItHr/8YRCt3Op/cQ212lbGQZpkivuHK05S4vUzRQvWw/rqmdNVDqMouyYqaR3xtY+QZHPZhCiGV+l1AVsZ3szBm4Af2Sz/PFEsLdwaT9d+m0kVuUx75XWBBLE4ISEb6VzR9PkG/ATGz/z4G37LuTTKrNv5LTb9spg1L14js5R7nSinD2oBCfd3jPKVVVYqwx06Ch3Pk05JVppDVFnZ1pV+Xm4Te8ddr9GrrueXzxE375/vn3AX+hFB9rpdLTnRS7BKSRL5MLWknukU/zNBrv5SL9BtxQkbpQyo0KqoaXYCdoKUm8uwt4jZkp6DN+ixz5I/w1XHGAQ8XWLZ2m+fNWLHEGFLm54tBbcaDzhf4sofghSmWDJnC6Ec9oRJ6rJtabghOqupYurFiUlVOnNjhGjo8vA8T3PgFkf7Qkl/MzrxKJGB/Cb1dNVbdi3agTQHVVQsA5EgBaJyGbNMqc4/rZowu9AidgJdQDDYGT25aHYJpGsO6Ix6MtD5BISh3JFffA2FHzLlTQuQfl+uLeZ6v4BavThAUpXnV6+W7SmAZP5/7sWvcKyVzPtIwOsOkc8S9DeErQT6g3fgHy8LCm/UvrtdWkfbIxhTa1OQazqn+h8vFipdlhHjWUqBX+3Vl0uaIAJ+gWyC9s/dmf1Cg1PSM1UbnEWs47FrAH0kxUz+8/RstehObaWseL2a+v8kHX7ybp5/R8=&lt;/diagram&gt;&lt;/mxfile&gt;&quot;,&quot;toolbar&quot;:&quot;pages zoom layers lightbox&quot;,&quot;page&quot;:0}"></div>

<blockquote>
  <p>However, if the service responsible for authentication and registration breaks down, it can lead to a system-wide outage.</p>
</blockquote>

<p>Nevertheless, in general, a microservices architecture will make our application much more reliable and less vulnerable to operational failures.</p>

<p>As the number of microservices in our system grows, there may be an issue with distributing requests among them. The API Gateway is a component that can be used to distribute requests between different services. The API Gateway works as a proxy server that receives requests from clients and distributes them between different microservices based on certain routing rules.</p>

<div class="mxgraph" style="max-width:100%;border:1px solid transparent; margin: auto;" data-mxgraph="{&quot;highlight&quot;:&quot;#0000ff&quot;,&quot;nav&quot;:true,&quot;resize&quot;:true,&quot;toolbar&quot;:&quot;zoom layers tags lightbox&quot;,&quot;xml&quot;:&quot;&lt;mxfile host=\&quot;Electron\&quot; modified=\&quot;2023-03-03T13:15:21.465Z\&quot; agent=\&quot;5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/20.8.16 Chrome/106.0.5249.199 Electron/21.4.0 Safari/537.36\&quot; etag=\&quot;WaYN6Gl8XfCNKHKC-SbJ\&quot; version=\&quot;20.8.16\&quot; type=\&quot;device\&quot;&gt;&lt;diagram name=\&quot;–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1\&quot; id=\&quot;rfapnOhzl1QFCX-cExyy\&quot;&gt;7Vtbc5s4FP41foyHi8H2Y2LnOtudTN1O2r50ZJBBG0BeIV/SX78SCANCJNiGxO36KdaREJK+75zvSCI9cxJubwlY+p+wC4OeobnbnjntGYY+HujsD7e8pJahOU4NHkGuaJQbZugXFEZNWFfIhXGpIcU4oGhZNjo4iqBDSzZACN6Umy1wUH7rEniwYpg5IKhan5BL/dQ6Moa5/Q4iz8/erNtifiHIGouZxD5w8aZgMq975oRgTNNf4XYCA7542bqkz93U1O4GRmBEmzxgPdHvX32yBvTHxef7J3j/8OX2QjfTbtYgWIkZ9ww7YB1eLTDrlw2bvoi1sP9d4aziIk6QumQNDGPJ0L7K6/kyA6f8zASHyGEVMxDF7M+nWbG57fG/M0jWkLDKK+A8w8jNxjEnWYvMwuaYDi4zG6VxGgSvIhfyaeuseuMjCmfLdEQbxlJm82kYiOr4GVLHFwVnxcZwgyhFkSdM/yDPSzo2eOMMQ17DRksRY8plgLyI2SjmXWP2JkQ528caK4Z4DebJ8/wRAtm6FcuYAlooM++BxTJ0UbEYYLYyfF68Z8H4QnWVEYIkfKRwWzAJhtxCHEJKXlgTUXthCrYKd7UtUd7k5B8Ohc0vEH9gCyMQDuft+s45yX4IWu5DUatC0SlfNBDDCvIMnyX/6bIGMcUENsC/CGmJDJxjNyBEAV+LKoHrCMAfE3Fs1A4og7FVAkXX9CoqlgIUqzNMxoqwIWHBXPiSB2BWinAEy6ueu6jWZKX3c1JK8PMuWiduFLk3iM8weVsZcQoIzcaJlzDKbIUHaiGEbkk8qgA2xIfAAFC0LkuOCjTxhkeMktgs+GEZZacdjyTcY7wiDhRPFSXijY50TZN6YivjQVrpKSHRbt6H88pUyVE9rwReJ88rwf/fjldmW7wyP5pXqni1X5qja+2kOZ9w5OFp41zGBbG/4zNe0QBFcLLLdbUy+4EQIocRiqVSLGEAcxg84hhRhEsVmXT9JTWYY0pxWKttmb6GW4+n+/0NnAfYw3E/5LNy56zJkmMIyfWavSpW+eEdDNaQ913WSiYpaXmCA0y4hsMFWKUQMZfJrMKV2OtdBPPGmYcdnMyVnftV72wu3LYmOdCwqtumrvLfvtGRcmf7sbNyn0KErSXI3hF2JHUkp34dB9iBcabV6dDKGktsGBxIK1uXOpJ3eV3T6vjjCYVup1L7mW2u46YyDOJlqrgLtOUsLVI3UbxkPayrnjVV6TAKk2Omkt4ZuX2KQo+NIEBzvkqxA9jO9mYCHB/+TEb585Fgd+XQfrz2mkisymOOldYlJIjBCQnfSqeOpmUz4Cc2XuLBefs25NMqs280brbtzYJR++I5Oke504ly9kAKTrp9YJSTVViTOuo6yp1PU06JVlpN1NmbVjI/u9v03mHnW+g428XFQ/j9x5fbB/yVXrSgneOW9rzIITiGZI0c2Fhy3+kUf7fBrj/Sb0HKpIO1oeJY3RooOL27BztGy5TsGL7FjkOA/htuOL4g5MsWzeN09eR7HMGENi54tAbUqD3gf4snXgDiLL/KUroALmhLlJBza01xOGCo0puuKKHKbvYMGC3dBU7ueQLMntEe0ZIfeZ1Y0GgBflM+XNWGfatCAH2sCgpWRwRokIfs1ixxivffFU35FSgRG6EWYBiMzH52JrbLI6uOaAz62RlyCYmuXFEfvA0F33Etmy/B7hsJcWPcK36G0CRAjT48QOmqw8ujRWvmM5X/o7TodUq97RsfB7DqGPEsQc0k6FjUs1o5V/1wWVJ+pPR76VJL2BjDilqdglhVv9D5eLFS7LDeN5apFPxorbpcUR8T9Ask97X/j53V65w7YTVTucVZzI4Rs+agn6yY2X+olu0NzWlqmdFN2H5kDqjdAgo34KUb36uNxSWvU3hlesCvuBps8tGO0Wtys5hbpa+jmycEtTSS7wgVm1RdFfX1zsK+0SAdOvQ6Z38cDhfpWnBO5KJGl755GclBoelFjSHf+MgddXxRYzTQhDNhOiCMPe5bo5Y4o+ira9qornDOtOmcNmO9Pdqo+jqYNqyY/ztZ2jz/pzzz+j8=&lt;/diagram&gt;&lt;/mxfile&gt;&quot;}"></div>

<p>API Gateway can perform various tasks such as authentication and authorization, request registration and tracking, load balancing, and caching. It can also add additional logic to requests, such as converting request formats or handling errors.</p>

<p>Therefore, using API Gateway in our microservices system will help ensure efficient and reliable distribution of requests among different services, which increases the overall resilience and performance of our application.</p>

<h2 id="infrastructure">Infrastructure</h2>

<p>There are many ready-made infrastructure solutions that can be implemented in your application. Here are a few of the most interesting and essential services:</p>

<p><a href="https://aws.amazon.com/s3/"><img src="/img/posts/WEB/amazonS3.png" style="width:128px;max-width:100%;" align="right" /></a></p>

<ul>
  <li><strong>Simple storage service</strong>
    <ul>
      <li>We need to store a large amount of data. <code class="language-plaintext highlighter-rouge">Amazon s3</code>, for example, can help us with that.</li>
    </ul>
  </li>
</ul>

<p><a href="https://clickhouse.com"><img src="/img/posts/WEB/clickhouse.png" style="width:128px;max-width:100%;" align="right" /></a></p>

<ul>
  <li><strong>Analytics</strong>
    <ul>
      <li>Over time, as our service gained more users, we needed to store data about how our service is being used.
   For example, what users search for on our site, which pages they visit most frequently, what they purchase, and so on.</li>
      <li>For such analytics, regular databases are not suitable because we need to store a huge amount of data and we don‚Äôt need to modify or delete them, just add and read them quickly.</li>
    </ul>
  </li>
</ul>

<p>One of the most popular solutions for this is the <code class="language-plaintext highlighter-rouge">clickHouse</code> database.</p>

<p><a href="https://kubernetes.io"><img src="/img/posts/WEB/Kubernete.png" style="width:128px;max-width:100%;" align="right" /></a></p>

<ul>
  <li><strong>Container management</strong>
    <ul>
      <li>Since we can have a large number of microservices, as we mentioned before, which are packaged in containers, we need a way to manage this large number of containers. And for this, there is a ready-made solution called <code class="language-plaintext highlighter-rouge">Kubernetes</code>.</li>
    </ul>
  </li>
</ul>

<p>There are many infrastructure solutions available for various tasks. I won‚Äôt go into detail about the so-called Balancer, which helps us balance the load on our service between different data centers and similar things.</p>

<p>To exchange data between the Frontend and Backend, <code class="language-plaintext highlighter-rouge">RestApi</code>, <code class="language-plaintext highlighter-rouge">SOAP</code>, <code class="language-plaintext highlighter-rouge">GraphQL</code>, and so on are commonly used. There is a lot of information available online about all of these technologies.</p>

<h2 id="processing-large-amounts-of-data">Processing large amounts of data</h2>
<p><a href="https://kubernetes.io"><img src="/img/posts/WEB/h0.png" style="width:128px;max-width:100%;" align="right" /></a>
If an application has a large user base, it makes sense to process a large amount of data, which is usually handled by analysts. For this, <code class="language-plaintext highlighter-rouge">Hadoop</code> and the <code class="language-plaintext highlighter-rouge">HDFS</code> file system are most commonly used. This is already a completely different field called ‚ÄúBig Data‚Äù. The key here is to collect large data sets that we can collect from users, such as website behavior, etc. Such data is sometimes sold (it is very expensive) or passed on to neural networks, which are trained using this data.</p>

<hr />

<p>So, I have described a small part of the architectural solutions in building large applications with a greater focus on the backend component. Of course, this article is superficial and not in-depth, but I wanted to introduce you to interesting architectural solutions that have evolved over many years and continue to develop.</p>

<script type="text/javascript" src="https://viewer.diagrams.net/js/viewer-static.min.js"></script>]]></content><author><name>Soloviov Ivan</name></author><category term="web" /><summary type="html"><![CDATA[Interesting architectural solutions for web applications with a brief history overview]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://0.0.0.0:4000/img/posts/WEB/WEB.png" /><media:content medium="image" url="http://0.0.0.0:4000/img/posts/WEB/WEB.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Jekyll is the best tool for creating your own media</title><link href="http://0.0.0.0:4000/about-my-blog/" rel="alternate" type="text/html" title="Jekyll is the best tool for creating your own media" /><published>2022-07-21T14:05:39+00:00</published><updated>2022-07-21T14:05:39+00:00</updated><id>http://0.0.0.0:4000/about-my-blog</id><content type="html" xml:base="http://0.0.0.0:4000/about-my-blog/"><![CDATA[<p>11 months ago, I decided to develop a pet project. I mainly program in C Sharp, so I didn‚Äôt have to think long about the choice of technologies for development. Since <a href="https://en.wikipedia.org/wiki/ASP.NET_Core">ASP.Net Core MVC</a> is quite widespread, I thought it would be a good addition to my resume.</p>

<center>
<img src="/img/posts/Jekyll/Genius.webp" alt="Network" class="img-fluid" />
<p class="caption text-muted">¬©Genius 2016 by Michael Grandage</p>
</center>

<p>Also, it could demonstrate my skills in testing, ‚Äúdevopsing‚Äù, development and in general the whole stage of creating a product, maybe not perfect, with simple functionality and implementation, but a finished product. I allocated a period of one month for the development of the working version. This term included the development of the interface, database, architecture, as well as writing the code and testing it. I also set aside a few days to familiarize myself with available cloud technology solutions for my product deployment. One of the main advantages for me was the simplicity, clarity of the UI and the trial period.</p>

<p>The choice fell on Google Cloud Platform, because at that time I already had some experience with Amazon Web Services. After reading several interesting stories about how a developer wrote a not very successful script, after which his servers worked at full capacity for a day, by the way, this script cost him 20 thousand dollars, I was frankly scared to upload my project to AWS. So I signed up for Google cloud platform and got $200 free for 90 days to buy a virtual server on Linux.</p>

<p>By the way, these funds were not enough for me for a short time, for about two months. But during this time I was able to fix the server and improve my site to an acceptable appearance. After the trial period, it‚Äôs time to pay a lot of money for hosting. But I decided to turn off the server, cancel the subscription and abandon the project indefinitely. By the way, you can check out the source code of the ASP.Net Core blog by following this <a href="https://github.com/WarmingZ/MyWebSite">link</a>.</p>

<p>But the topic of this post is <a href="https://jekyllrb.com">Jekyll</a>. So, I moved my site to the Jekyll static site generator and deployed it to GitHub Pages, absolutely free by the way!
Now let‚Äôs recall all the stories about AWS and Google Cloud Platform that I described above and ask ourselves, do we need different services and clouds to host our home projects?</p>

<p>Of course, Jekyll is just a generator of static pages, but you have no idea what opportunities and advantages it can provide you. Of course, I‚Äôve been developing my blog for a GitHub portfolio. But the beauty and simplicity of Jekyll is stunning. By the way, in my blog on ASP.Net Core, I developed an admin panel in which I embedded a text editor <a href="https://ckeditor.com">CKeditor</a> with a lot of features. But even now I have an admin panel that I connected as a Jekyll plugin, and I can access it via the Internet and change my posts.</p>

<p>If you want to start your blog, or create a page for your software product with a description and documentation, you can safely use Jekyll and GitHub Pages for this. To try it out, visit <a href="https://jekyllrb.com">Jekyll</a>, where you can find detailed documentation on how to use it.</p>

<p>Jekyll is a really nice tool that works very well on GitHub servers. Since this is a generator of static pages, the user, opening your site in the browser, receives an HTML page that was generated by jekyll on the GitHub server, so the speed of work will be amazing. Of course, if you follow several rules of frontend development, for example, do not use Jpeg or PNG image format, which will take a long time to load when opening your site and the user will see the image loading from top to bottom. Of course, all this can be configured in the rules for uploading content, or something, there are a lot of options. By the way, if you download almost any picture from this site, you will see that it will have a WebP extension.</p>

<p>I have developed more than one site using ASP.Net Core MVC. But if you really just want to run your blog, or create a nice page with your product documentation, you won‚Äôt find a better option than Jekyll. You can check out my projects by visiting my <a href="https://github.com/WarmingZ?tab=repositories">GitHub</a> account, or by <a href="https://github.com/WarmingZ/WarmingZ.github .io">link</a> you can familiarize yourself with the files and code of this site.</p>]]></content><author><name>Soloviov Ivan</name></author><category term="jekyll" /><summary type="html"><![CDATA[Create your own media resource using Jekyll and GitHub Pages]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://0.0.0.0:4000/img/posts/Jekyll/Git.jpg" /><media:content medium="image" url="http://0.0.0.0:4000/img/posts/Jekyll/Git.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="en"><title type="html">Answers on questions üá∫üá¶</title><link href="http://0.0.0.0:4000/war/" rel="alternate" type="text/html" title="Answers on questions üá∫üá¶" /><published>2022-06-12T22:10:39+00:00</published><updated>2022-06-12T22:10:39+00:00</updated><id>http://0.0.0.0:4000/war</id><content type="html" xml:base="http://0.0.0.0:4000/war/"><![CDATA[<p>Hello, after looking at the statements of some representatives of Russian IT and Russian society in general about the war in Ukraine, I wanted to try to answer some of their claims and questions. I don‚Äôt know if I can convince anyone, but I will express my point of view. The article turned out to be quite simple and superficial because I tried to cover the most common questions, so I did‚Äôt manage to look deeper.</p>

<center>
<img src="/img/posts/War2/War2.webp" alt="Network" class="responsive" style="width: 100%; height: auto;" />
</center>

<hr />

<p>After watching an interview with Yegor Bugaenko for the youtube channel ‚ÄúIn the Office‚Äù I came across some of Yegor‚Äôs arguments about the war in Ukraine and the situation in general that was unfolding around and in Ukraine itself. If someone is not familiar with Egor, he is a representative of the IT community in Russia. Also, according to Yegor himself, he was born in Ukraine in the city of Dnepropetrovsk and left the country at the age of 23. Egor has worked in many places and managed to travel around the world, but now, for the last 5 years, Egor lives in Moscow and works at Huawei.
I am writing this post because, as it seems to me, I can counter some of the arguments Yegor said about Ukraine in this interview. I also urge you to try to understand the position of the hero.</p>

<center>
<img src="/img/posts/War2/Pol.webp" alt="Network" class="responsive" style="width: 100%; height: auto;" />
</center>

<p>From the beginning, Egor said that in Russia, in particular in Moscow, the society is not so politicized in comparison with Ukraine. And this is true,going up to a person on the street and asking him what he thinks about such and such a political situation, 80% of respondents will tell you their points of view. But is it really that bad? Ukraine, all the time to be between two opposing forces, has experienced many Maidans and presidents.
Almost all the years of independence, the society wanted changes, the proof of this is the change of power. I will not analyze the Maidan of 2014, but after, as I believe, the unsuccessful rule of Petro Poroshenko, people chose Zelensky. At that time, society wanted a more centric president. You can watch Zelensky‚Äôs interview before his presidency and make sure of my words. That is, there was a demand from society for change, which was shown by the 2019 elections. And I repeat, a request for a legitimate change of power and bloodless changes. Another question is that the reforms were carried out for a very long time, but the formation of such a large and multinational country never happens quickly. I think this is clear to everyone, although perhaps someone will be able to parry my arguments.</p>

<h4 id="rejection-of-anothers-opinion">Rejection of another‚Äôs opinion</h4>

<p>Further, Yegor speaks about not accepting a different position, a different opinion, which can radically differ from the opinion of the interlocutor. On this account, I would like to say that such a phenomenon is observed not only in Ukraine, and not only in this country, people hang labels on a person. Taking the Russian society as a whole, which, by the way, hangs labels no worse than the Ukrainian one, and listen to the opinion of the Russian about the Ukrainian, I don‚Äôt think that we will hear anything good.</p>

<center>
<img src="/img/posts/War2/Tuzla.webp" alt="Network" class="responsive" style="width: 100%; height: auto;" />
</center>

<p>Yes, for many years we were considered brothers, but at the same time they sold us gas at exorbitant prices and had views of the island of Kos Tuzla, back in 2003. And that‚Äôs just what I can remember. Also, let‚Äôs pay attention to the linguistic features, when Russians constantly say ‚Äúin Ukraine‚Äù, explaining this by the fact that Ukraine as such did not exist and it was ‚Äúon the outskirts‚Äù which is absolute nonsense. Since Kyiv existed when there was a swamp on the site of Moscow. You can also read historical summaries of the term Oukraina on the Internet, I also think when they say ‚Äúon‚Äù, then this country is going to war. As it happened, Russia went to war with Ukraine.
But it is worth paying tribute to Yegor, he was not talking about Ukrainians, but about people in general.</p>

<h4 id="about-russian-and-ukrainian-languages">About Russian and Ukrainian languages</h4>

<p>Egor gives several arguments about the Ukrainian language, which, it seems to me, are due to Ukraine‚Äôs long stay in the Soviet Union. We perfectly understand what language children were taught in schools and what language the Ukrainian Soviet government spoke. Egor cites the words of Vaserman as an example, who stated that the Ukrainian language during its existence could not form from the southern dialect of the Russian language into an independent language. The author of the opinion also speaks of ‚ÄúSurzhik‚Äù, calling it an intermediate language, which is between Russian and Ukrainian. But I will not describe the phenomena of ‚ÄúSurzhik‚Äù, I would like to comment on the words about the unformed language. Based on historical events, one can understand why so few people speak Ukrainian. I believe that this is precisely the consequence of Russia‚Äôs policy for all the years of its existence. I also urge you to study the Russian language before the period of the revolution, before the Bolsheviks abolished the language. It will also be interesting to study the appearance of the first institutions and graduates of these institutions.</p>

<center>
<img src="/img/posts/War2/sssr.webp" alt="Network" class="responsive" style="width: 100%; height: auto;" />
</center>

<p>Let‚Äôs pay attention to the words about ‚ÄúSurzhik‚Äù. Do 100% of Russians really speak a pure Russian dialect? If we start to explore the issue of dialectics, we will come across a greater number of so-called ‚Äúsurzhiks‚Äù than in Ukraine. I do not know the specific percentage of people who speak a dialect, but based on the size of the territory of Russia, we can conclude that not everyone speaks pure Russian. So I don‚Äôt think the ‚Äúsurzhik‚Äù argument is that good. I urge you to also study the linguistic issue in the Kuban and take a closer look at the names of villages in the Belgorod region, it seems to me that if you carefully study this issue, you can find a lot of interesting things.</p>

<p>It is worth understanding one thing, the Ukrainian language is the cultural heritage of Ukrainians and should be the state language. Otherwise, we will continue to follow the same path as before and say that the Ukrainian language could not develop into an independent one. Since the Ukrainian language is the state language, this language should prevail in schools and universities and in politics. Let‚Äôs fantasize and imagine that in Russia they are allowed to speak Ukrainian and teach Ukrainian in schools? You ask, why? In Russia, the Russian language, which Ukrainians were forced to speak for many years, by the way. But when a person living in a country does not know the state language, how to call such a person? Egor says that it is rather difficult to learn such a language as Ukrainian, and here I do not agree, you just need to learn it and try to speak it. Just like learning other languages.</p>

<p>My opinion on this matter is as simple as possible, maximum preferences for the Ukrainian language, freedom for Russian. If they go back a little higher and read my arguments about Zelensky‚Äôs election, it can be repeated again that people wanted a centric government that would take a less radical approach, including to the language issue. And this issue was resolved, but for a long time, but hard, but in the end of development it could have been resolved if Russia had not crossed everything out with its invasion of a foreign country.</p>

<center>
<img src="/img/posts/War2/surzhik.webp" alt="Network" class="responsive" style="width: 100%; height: auto;" />
</center>

<p>Just as everything Yegor brings to the account of the ban on everything Russian in Ukraine can be applied to Russia itself. But for some reason these bans are better than in Ukraine. Quite a lot has also been said about freedom of speech and that Yegor advocates that it generally does not exist in any state. With which, in principle, I agree, but again, in Russia for Yegor, for some reason, censorship is better than in Ukraine. Perhaps I somehow did not understand the words of the author of these words, but I got the impression.</p>

<h4 id="ukraine-bombed-donbass-for-8-years">Ukraine bombed Donbass for 8 years</h4>

<p>This thesis seems very interesting to me. This question is asked by the majority of Russians, as if justifying their actions in relation to Ukraine. This is not the only ‚Äúargument‚Äù that is voiced towards Ukraine. The Russians mention that Ukraine wants to join NATO and Russia does not want to see alliance bases near its borders. And this also has an explanation. But let‚Äôs start with eight years of bombing the Donbass and the question of where we have been all these years.
This question can also be asked to the people of Russia, but where were you for 8 years? Why were you silent while ‚Äúwe bombed Donbass‚Äù? And who has destabilized the situation in these regions all these years?</p>

<center>
<img src="/img/posts/War2/Donbas.webp" alt="Network" class="responsive" style="width: 100%; height: auto;" />
</center>

<p>By the way, since 2017 Ukraine has wanted to introduce peacekeeping forces in the occupied regions. However, such plans have not been implemented so far due to the ambitions of the Russian government and Putin‚Äôs efforts to carry out a UN peacekeeping mission on favorable terms. The fact is that Ukraine and its Western allies have differing views with Russia on the mandate of such a UN mission.</p>

<p>In particular, the Ukrainian position was that peacekeepers should be in the entire occupied territory, while Russia wanted to deploy peacekeeping units only on the line of demarcation. It is clear that it was not profitable for Putin to give peacekeepers de facto control at the border, because the pseudo-republics would simply fall apart without supplies of food, ammunition and, most importantly, financial infusions.</p>

<center>
<img src="/img/posts/War2/UN.webp" alt="Network" class="responsive" style="width: 100%; height: auto;" />
</center>

<p>Didn‚Äôt your government supply weapons there? According to <a href="https://en.wikipedia.org/wiki/Igor_Girkin">Girkin</a>, he and the company, after the capture of Crimea, without an order from the military authorities, went to raise a wave of protest in the regions of Donbass. And by the way, all these people who took part in the operation to seize the Crimea and other regions were not regular military personnel of the RF Armed Forces. Do you think it is possible to draw an analogy with the oprichnik‚Äôs, Ivan Grozny ( Ivan the Terrible)? I think that these citizens even surpassed their historical ancestors, since the guardsmen at least stood in the ranks of the oprichnik‚Äôs.
By the way, I urge you to look at the statistics of the shelling of Donbass by the Ukrainian military, and you will be very surprised to see this number since 2019 (starting from Zelensky‚Äôs presidency). They may also object to me and ask why we did not comply with the Minsk Agreements. The answer will be simple, these agreements were created deliberately, impracticable. They were not beneficial both for the Russian Federation and for Ukraine, and everyone perfectly understood that no one would fulfill them.</p>

<p>The Russian oligarch <a href="https://en.wikipedia.org/wiki/Konstantin_Malofeev">Malofeev</a> also allocated money for arming the so-called ‚ÄúDNR‚Äù . It‚Äôs also just a fun fact. According to <a href="https://en.wikipedia.org/wiki/Sergei_Pugachev">Sergey Pugachev</a> who was very close to Putin, all the money of the oligarchs is the money of Putin personally, who can simply order what to buy and where to finance.
So is it really that the majority of people living in the regions of Donbass really wanted to go to Russia so badly? We will never know the answer to this question.</p>

<center>
<img src="/img/posts/War2/Nato.webp" alt="Network" class="responsive" style="width: 100%; height: auto;" />
</center>

<p>And what about NATO? I believe that America as a whole has made little effort to destabilize the situation in Ukraine. The endless struggle between Russia and America has brought us to this point. Only Russia shows us unjustified imperial ambitions. If someone does not people Russia, she will make you love her by force. It is also an interesting question, but would Ukraine want to join NATO if Russia had not pursued such a bloody policy? Let‚Äôs look at the number of ‚Äúarmed conflicts‚Äù involving Russia that I can highlight.</p>

<ul>
  <li>The Ossetian-Ingush conflict began in 1992 and remains unresolved to this day.</li>
  <li>Armed conflict in Transnistria in 1992.</li>
  <li>The first Chechen war of 1994-1996.</li>
  <li>Dagestan war 1999.</li>
  <li>The Second Chechen War 1999 - 2009.</li>
  <li>Armed conflict in South Ossetia in 2008.</li>
  <li>Annexation of Crimea in 2014.</li>
  <li>‚ÄúMilitary operation‚Äù of the Russian Federation in Syria since 2015.</li>
  <li>Civil war in the Central African Republic in 2018, where the Russian Federation sent its troops in support of the current government.</li>
  <li>And the invasion of Ukraine.</li>
</ul>

<hr />

<p>And to this, any Russian will answer something like ‚Äúbut how many wars has America unleashed?‚Äù. And this will be the standard justification of their state. But interestingly, it turns out that the Russians hate America and call it bloodthirsty, when they themselves do the same thing. So how are you different from the ‚Äúbloodthirsty Americans‚Äù?</p>]]></content><author><name>Soloviov Ivan</name></author><category term="personal" /><summary type="html"><![CDATA[Let's try to answer frequently asked questions and claims of the Russian society towards Ukraine]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://0.0.0.0:4000/img/posts/War2/A.jpg" /><media:content medium="image" url="http://0.0.0.0:4000/img/posts/War2/A.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="en"><title type="html">The war in Ukraine</title><link href="http://0.0.0.0:4000/war-in-Ukraine/" rel="alternate" type="text/html" title="The war in Ukraine" /><published>2022-03-04T22:10:39+00:00</published><updated>2022-03-04T22:10:39+00:00</updated><id>http://0.0.0.0:4000/war-in-Ukraine</id><content type="html" xml:base="http://0.0.0.0:4000/war-in-Ukraine/"><![CDATA[<p>The occupier from the Russian Federation came to my native country. He kills people and destroys cities, strikes and fires at apartment buildings, uses vacuum bombs and vicious attacks on my homeland. The occupier made a mistake and entered our land on February 24, 2022. This post didn‚Äôt come out earlier because blogging wasn‚Äôt a priority these days.</p>

<center>
<img src="/img/posts/War/image.jpg" alt="Network" class="responsive" style="width: 100%; height: auto;" />
</center>

<hr />

<p>It is always difficult to write about the war, especially for me, a person who does not know how to do it, but I will try to explain the situation in my homeland. I would like people from all over the world to correctly understand everything that is happening in Ukraine from the mouth of the person who is here.</p>

<p>The military campaign began after a long build-up of Russian troops in November 2021 along Ukraine‚Äôs border with Russia and Belarus and the recognition by Russian authorities on February 21, 2022 of terrorist groups in Ukraine - ‚ÄúDNR‚Äù and ‚ÄúLNR‚Äù - as state entities. Various media outlets, Western and Ukrainian politicians have repeatedly viewed the accumulation of Russian troops near the Ukrainian border as Russia‚Äôs preparation for war with Ukraine. Almost simultaneously, the Armed Forces of the Russian Federation began the undisguised transfer of additional troops to the occupied territories of Donetsk and Luhansk regions.</p>

<p>List of weapons used by Russia in shelling residential buildings.</p>
<ul>
  <li><strong><a href="https://en.wikipedia.org/wiki/9K720_Iskander">Iskander</a></strong> - In this <strong>üî•<a href="https://youtube.com/shorts/SLDq1tICyR8?feature=share">video</a></strong>, the rocket was fired from the Belgorod region, which landed in the Cherkasy region of Ukraine.</li>
  <li><strong><a href="https://en.wikipedia.org/wiki/TOS-1">TOS-1 Buratino/TOS-1A Solntsepyok</a></strong> - In this <strong>üî•<a href="https://youtu.be/R4d5vZ3R0gw">fragment</a></strong> you can see the shelling in the city of Kharkiv with TOS-1A Solntsepyok.</li>
  <li><strong><a href="https://en.wikipedia.org/wiki/BM-21_Grad">BM-21 Grad</a></strong> - There is a shelling of Kharkiv from BM-21 Grad, go to <strong>üî•<a href="https://youtu.be/zvUNAzTC-AI">view</a></strong>.</li>
  <li><strong><a href="https://en.wikipedia.org/wiki/Father_of_All_Bombs">Aviation Thermobaric Bomb of Increased Power</a></strong>  - Russia used this bomb in Kharkov, video of the explosion you can see by following the <b><strong>üî•<a href="https://youtu.be/_GDAyOvBg-M">link</a></strong></b></li>
</ul>

<p>Of course, this is not a complete list of weapons used. According to the State Emergency Service, more than 2,000 civilian Ukrainians have died in the past seven days of the war. Russia has destroyed groups of transport infrastructure, housing, hospitals and kindergartens. According to the Office of the Commissioner for Human Rights, 21 children have died and 55 more have been injured since the Russian invasion of Ukraine.</p>

<p>You can see the consequences of air strikes on Kharkiv in these photos.</p>

<div class="carousel__holder">
    <div id="carousel0" class="carousel">
        
          <input class="carousel__activator" type="radio" name="carousel0" id="0a" checked="checked" />
        
          <input class="carousel__activator" type="radio" name="carousel0" id="0b" />
        
          <input class="carousel__activator" type="radio" name="carousel0" id="0c" />
        
          <input class="carousel__activator" type="radio" name="carousel0" id="0d" />
        
          <input class="carousel__activator" type="radio" name="carousel0" id="0e" />
        
          <input class="carousel__activator" type="radio" name="carousel0" id="0f" />
        
          <input class="carousel__activator" type="radio" name="carousel0" id="0g" />
        
        
          
          
          
          
          <div class="carousel__controls">
              <label class="carousel__control carousel__control--backward" for="0g"></label>
              <label class="carousel__control carousel__control--forward" for="0b"></label>
          </div>
        
          
          
          
          
          <div class="carousel__controls">
              <label class="carousel__control carousel__control--backward" for="0a"></label>
              <label class="carousel__control carousel__control--forward" for="0c"></label>
          </div>
        
          
          
          
          
          <div class="carousel__controls">
              <label class="carousel__control carousel__control--backward" for="0b"></label>
              <label class="carousel__control carousel__control--forward" for="0d"></label>
          </div>
        
          
          
          
          
          <div class="carousel__controls">
              <label class="carousel__control carousel__control--backward" for="0c"></label>
              <label class="carousel__control carousel__control--forward" for="0e"></label>
          </div>
        
          
          
          
          
          <div class="carousel__controls">
              <label class="carousel__control carousel__control--backward" for="0d"></label>
              <label class="carousel__control carousel__control--forward" for="0f"></label>
          </div>
        
          
          
          
          
          <div class="carousel__controls">
              <label class="carousel__control carousel__control--backward" for="0e"></label>
              <label class="carousel__control carousel__control--forward" for="0g"></label>
          </div>
        
          
          
          
          
          <div class="carousel__controls">
              <label class="carousel__control carousel__control--backward" for="0f"></label>
              <label class="carousel__control carousel__control--forward" for="0a"></label>
          </div>
        
        <div class="carousel__track">
          <ul>
            
            <li class="carousel__slide" style="background-image: url('/img/posts/War/Kharkiv1.webp');"></li>
            
            <li class="carousel__slide" style="background-image: url('/img/posts/War/Kharkiv2.webp');"></li>
            
            <li class="carousel__slide" style="background-image: url('/img/posts/War/Kharkiv3.webp');"></li>
            
            <li class="carousel__slide" style="background-image: url('/img/posts/War/Kharkiv4.webp');"></li>
            
            <li class="carousel__slide" style="background-image: url('/img/posts/War/Kharkiv5.webp');"></li>
            
            <li class="carousel__slide" style="background-image: url('/img/posts/War/Kharkiv6.webp');"></li>
            
            <li class="carousel__slide" style="background-image: url('/img/posts/War/Kharkiv8.webp');"></li>
            
          </ul>
        </div>
        <div class="carousel__indicators">
            
              <label class="carousel__indicator" for="0a"></label>
            
              <label class="carousel__indicator" for="0b"></label>
            
              <label class="carousel__indicator" for="0c"></label>
            
              <label class="carousel__indicator" for="0d"></label>
            
              <label class="carousel__indicator" for="0e"></label>
            
              <label class="carousel__indicator" for="0f"></label>
            
              <label class="carousel__indicator" for="0g"></label>
            
        </div>
    </div>
</div>

<style>
.carousel__holder {width: 100%; position: relative; padding-bottom: 50%; margin: 1rem 0 1rem;}
.carousel {
  height: 100%;
  width: 100%;
  overflow: hidden;
  text-align: center;
  position: absolute;
  padding: 0;
}
.carousel__controls,
.carousel__activator {
  display: none;
}

.carousel__activator:nth-of-type(1):checked ~ .carousel__track {
  -webkit-transform: translateX(-000%);
          transform: translateX(-000%);
}
.carousel__activator:nth-of-type(1):checked ~ .carousel__slide:nth-of-type(1) {
  transition: opacity 0.5s, -webkit-transform 0.5s;
  transition: opacity 0.5s, transform 0.5s;
  transition: opacity 0.5s, transform 0.5s, -webkit-transform 0.5s;
  top: 0;
  left: 0;
  right: 0;
  opacity: 1;
  -webkit-transform: scale(1);
          transform: scale(1);
}
.carousel__activator:nth-of-type(1):checked ~ .carousel__controls:nth-of-type(1) {
  display: block;
  opacity: 1;
}
.carousel__activator:nth-of-type(1):checked ~ .carousel__indicators .carousel__indicator:nth-of-type(1) {
  opacity: 1;
}

.carousel__activator:nth-of-type(2):checked ~ .carousel__track {
  -webkit-transform: translateX(-100%);
          transform: translateX(-100%);
}
.carousel__activator:nth-of-type(2):checked ~ .carousel__slide:nth-of-type(2) {
  transition: opacity 0.5s, -webkit-transform 0.5s;
  transition: opacity 0.5s, transform 0.5s;
  transition: opacity 0.5s, transform 0.5s, -webkit-transform 0.5s;
  top: 0;
  left: 0;
  right: 0;
  opacity: 1;
  -webkit-transform: scale(1);
          transform: scale(1);
}
.carousel__activator:nth-of-type(2):checked ~ .carousel__controls:nth-of-type(2) {
  display: block;
  opacity: 1;
}
.carousel__activator:nth-of-type(2):checked ~ .carousel__indicators .carousel__indicator:nth-of-type(2) {
  opacity: 1;
}

.carousel__activator:nth-of-type(3):checked ~ .carousel__track {
  -webkit-transform: translateX(-200%);
          transform: translateX(-200%);
}
.carousel__activator:nth-of-type(3):checked ~ .carousel__slide:nth-of-type(3) {
  transition: opacity 0.5s, -webkit-transform 0.5s;
  transition: opacity 0.5s, transform 0.5s;
  transition: opacity 0.5s, transform 0.5s, -webkit-transform 0.5s;
  top: 0;
  left: 0;
  right: 0;
  opacity: 1;
  -webkit-transform: scale(1);
          transform: scale(1);
}
.carousel__activator:nth-of-type(3):checked ~ .carousel__controls:nth-of-type(3) {
  display: block;
  opacity: 1;
}
.carousel__activator:nth-of-type(3):checked ~ .carousel__indicators .carousel__indicator:nth-of-type(3) {
  opacity: 1;
}

.carousel__activator:nth-of-type(4):checked ~ .carousel__track {
  -webkit-transform: translateX(-300%);
          transform: translateX(-300%);
}
.carousel__activator:nth-of-type(4):checked ~ .carousel__slide:nth-of-type(4) {
  transition: opacity 0.5s, -webkit-transform 0.5s;
  transition: opacity 0.5s, transform 0.5s;
  transition: opacity 0.5s, transform 0.5s, -webkit-transform 0.5s;
  top: 0;
  left: 0;
  right: 0;
  opacity: 1;
  -webkit-transform: scale(1);
          transform: scale(1);
}
.carousel__activator:nth-of-type(4):checked ~ .carousel__controls:nth-of-type(4) {
  display: block;
  opacity: 1;
}
.carousel__activator:nth-of-type(4):checked ~ .carousel__indicators .carousel__indicator:nth-of-type(4) {
  opacity: 1;
}

.carousel__activator:nth-of-type(5):checked ~ .carousel__track {
  -webkit-transform: translateX(-400%);
          transform: translateX(-400%);
}
.carousel__activator:nth-of-type(5):checked ~ .carousel__slide:nth-of-type(5) {
  transition: opacity 0.5s, -webkit-transform 0.5s;
  transition: opacity 0.5s, transform 0.5s;
  transition: opacity 0.5s, transform 0.5s, -webkit-transform 0.5s;
  top: 0;
  left: 0;
  right: 0;
  opacity: 1;
  -webkit-transform: scale(1);
          transform: scale(1);
}
.carousel__activator:nth-of-type(5):checked ~ .carousel__controls:nth-of-type(5) {
  display: block;
  opacity: 1;
}
.carousel__activator:nth-of-type(5):checked ~ .carousel__indicators .carousel__indicator:nth-of-type(5) {
  opacity: 1;
}

.carousel__activator:nth-of-type(6):checked ~ .carousel__track {
  -webkit-transform: translateX(-500%);
          transform: translateX(-500%);
}
.carousel__activator:nth-of-type(6):checked ~ .carousel__slide:nth-of-type(6) {
  transition: opacity 0.5s, -webkit-transform 0.5s;
  transition: opacity 0.5s, transform 0.5s;
  transition: opacity 0.5s, transform 0.5s, -webkit-transform 0.5s;
  top: 0;
  left: 0;
  right: 0;
  opacity: 1;
  -webkit-transform: scale(1);
          transform: scale(1);
}
.carousel__activator:nth-of-type(6):checked ~ .carousel__controls:nth-of-type(6) {
  display: block;
  opacity: 1;
}
.carousel__activator:nth-of-type(6):checked ~ .carousel__indicators .carousel__indicator:nth-of-type(6) {
  opacity: 1;
}

.carousel__activator:nth-of-type(7):checked ~ .carousel__track {
  -webkit-transform: translateX(-600%);
          transform: translateX(-600%);
}
.carousel__activator:nth-of-type(7):checked ~ .carousel__slide:nth-of-type(7) {
  transition: opacity 0.5s, -webkit-transform 0.5s;
  transition: opacity 0.5s, transform 0.5s;
  transition: opacity 0.5s, transform 0.5s, -webkit-transform 0.5s;
  top: 0;
  left: 0;
  right: 0;
  opacity: 1;
  -webkit-transform: scale(1);
          transform: scale(1);
}
.carousel__activator:nth-of-type(7):checked ~ .carousel__controls:nth-of-type(7) {
  display: block;
  opacity: 1;
}
.carousel__activator:nth-of-type(7):checked ~ .carousel__indicators .carousel__indicator:nth-of-type(7) {
  opacity: 1;
}


.carousel__control {
  height: 30px;
  width: 30px;
  margin-top: -15px;
  top: 50%;
  position: absolute;
  display: block;
  cursor: pointer;
  border-width: 5px 5px 0 0;
  border-style: solid;
  border-color: #fafafa;
  opacity: 0.35;
  opacity: 1;
  outline: 0;
  z-index: 3;
}
.carousel__control:hover {
  opacity: 1;
}
.carousel__control--backward {
  left: 20px;
  -webkit-transform: rotate(-135deg);
          transform: rotate(-135deg);
}
.carousel__control--forward {
  right: 20px;
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg);
}
.carousel__indicators {
  position: absolute;
  bottom: 20px;
  width: 100%;
  text-align: center;
}
.carousel__indicator {
  height: 15px;
  width: 15px;
  border-radius: 100%;
  display: inline-block;
  z-index: 2;
  cursor: pointer;
  opacity: 0.35;
  margin: 0 2.5px 0 2.5px;
}
.carousel__indicator:hover {
  opacity: 0.75;
}
.carousel__track {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  padding: 0;
  margin: 0;
  transition: -webkit-transform 0.5s ease 0s;
  transition: transform 0.5s ease 0s;
  transition: transform 0.5s ease 0s, -webkit-transform 0.5s ease 0s;
}
.carousel__track .carousel__slide {
  display: block;
  top: 0;
  left: 0;
  right: 0;
  opacity: 1;
}

.carousel__track .carousel__slide:nth-of-type(1) {
  -webkit-transform: translateX(000%);
          transform: translateX(000%);
}

.carousel__track .carousel__slide:nth-of-type(2) {
  -webkit-transform: translateX(100%);
          transform: translateX(100%);
}

.carousel__track .carousel__slide:nth-of-type(3) {
  -webkit-transform: translateX(200%);
          transform: translateX(200%);
}

.carousel__track .carousel__slide:nth-of-type(4) {
  -webkit-transform: translateX(300%);
          transform: translateX(300%);
}

.carousel__track .carousel__slide:nth-of-type(5) {
  -webkit-transform: translateX(400%);
          transform: translateX(400%);
}

.carousel__track .carousel__slide:nth-of-type(6) {
  -webkit-transform: translateX(500%);
          transform: translateX(500%);
}

.carousel__track .carousel__slide:nth-of-type(7) {
  -webkit-transform: translateX(600%);
          transform: translateX(600%);
}


.carousel--scale .carousel__slide {
  -webkit-transform: scale(0);
          transform: scale(0);
}
.carousel__slide {
  height: 100%;
  position: absolute;
  opacity: 0;
  overflow: hidden;
}
.carousel__slide .overlay {height: 100%;}
.carousel--thumb .carousel__indicator {
  height: 30px;
  width: 30px;
}
.carousel__indicator {
  background-color: #fafafa;
}

.carousel__slide:nth-of-type(1),
.carousel--thumb .carousel__indicators .carousel__indicator:nth-of-type(1) {
  background-size: cover;
  background-position: center;
}

.carousel__slide:nth-of-type(2),
.carousel--thumb .carousel__indicators .carousel__indicator:nth-of-type(2) {
  background-size: cover;
  background-position: center;
}

.carousel__slide:nth-of-type(3),
.carousel--thumb .carousel__indicators .carousel__indicator:nth-of-type(3) {
  background-size: cover;
  background-position: center;
}

.carousel__slide:nth-of-type(4),
.carousel--thumb .carousel__indicators .carousel__indicator:nth-of-type(4) {
  background-size: cover;
  background-position: center;
}

.carousel__slide:nth-of-type(5),
.carousel--thumb .carousel__indicators .carousel__indicator:nth-of-type(5) {
  background-size: cover;
  background-position: center;
}

.carousel__slide:nth-of-type(6),
.carousel--thumb .carousel__indicators .carousel__indicator:nth-of-type(6) {
  background-size: cover;
  background-position: center;
}

.carousel__slide:nth-of-type(7),
.carousel--thumb .carousel__indicators .carousel__indicator:nth-of-type(7) {
  background-size: cover;
  background-position: center;
}

</style>

<script>
  function isVisible(el) {
        while (el) {
            if (el === document) {
                return true;
            }

            var $style = window.getComputedStyle(el, null);

            if (!el) {
                return false;
            } else if (!$style) {
                return false;
            } else if ($style.display === 'none') {
                return false;
            } else if ($style.visibility === 'hidden') {
                return false;
            } else if (+$style.opacity === 0) {
                return false;
            } else if (($style.display === 'block' || $style.display === 'inline-block') &&
                $style.height === '0px' && $style.overflow === 'hidden') {
                return false;
            } else {
                return $style.position === 'fixed' || isVisible(el.parentNode);
            }
        }
  }
  
</script>

<p>You have seen the consequences of the shelling of Kharkiv, but air strikes are being carried out in many cities of Ukraine. Adviser to the Minister of Internal Affairs Anton Gerashchenko on Facebook published a list of local explosions in the regions of Ukraine, provided by the National Police of Ukraine:</p>

<ul>
  <li>Lutsk - information about explosions;</li>
  <li>Odesa - explosion of a locator near the airport;</li>
  <li>Zaporozhye - an explosion near the airport;</li>
  <li>Mykolayivka, Chernihiv region - report on the movement of equipment from the Russian Federation;</li>
  <li>Myrhorod, Poltava region - explosion of two missiles;</li>
  <li>Kalanchak, Kherson region - shelling of border guards;</li>
  <li>Znamyanka, Kirovohrad region - shelling of a military unit;</li>
  <li>UDSNS Airport, Chernihiv Region - hitting the locator (there are victims);</li>
  <li>Starokostiantyniv, Khmelnytsky region - shelling of a military airport;</li>
  <li>Podolsk, Odesa region - 2 planes flew in from Transnistria, shelling;</li>
  <li>Ozerne, Zhytomyr region - rocket fire, one plane destroyed;</li>
  <li>Tulchyn and Teplyk, Vinnytsia region - explosions on;</li>
  <li>Ivano-Frankivsk region - shelling;</li>
  <li>Kharkiv - shelling;</li>
  <li>Zaporozhye - on the outskirts of the shelling of the military unit;</li>
  <li>Kyiv region (Vasylkiv, Boryspil, Brovary, Polissya districts) explosions;</li>
  <li>Novyi Kalyniv village, Lviv region - shelling of the fuel and lubricants base;</li>
  <li>Revne, Kyiv region - shelling of a military unit;</li>
  <li>Chongar and Kalanchak, Kherson region - shelling of a military unit.</li>
</ul>

<p>And this list is constantly updated, as this list was compiled on the first day of the war (February 24). I suggest viewing photos of the shelling of Kyiv.</p>

<div class="carousel__holder">
    <div id="carousel1" class="carousel">
        
          <input class="carousel__activator" type="radio" name="carousel1" id="1a" checked="checked" />
        
          <input class="carousel__activator" type="radio" name="carousel1" id="1b" />
        
          <input class="carousel__activator" type="radio" name="carousel1" id="1c" />
        
          <input class="carousel__activator" type="radio" name="carousel1" id="1d" />
        
        
          
          
          
          
          <div class="carousel__controls">
              <label class="carousel__control carousel__control--backward" for="1d"></label>
              <label class="carousel__control carousel__control--forward" for="1b"></label>
          </div>
        
          
          
          
          
          <div class="carousel__controls">
              <label class="carousel__control carousel__control--backward" for="1a"></label>
              <label class="carousel__control carousel__control--forward" for="1c"></label>
          </div>
        
          
          
          
          
          <div class="carousel__controls">
              <label class="carousel__control carousel__control--backward" for="1b"></label>
              <label class="carousel__control carousel__control--forward" for="1d"></label>
          </div>
        
          
          
          
          
          <div class="carousel__controls">
              <label class="carousel__control carousel__control--backward" for="1c"></label>
              <label class="carousel__control carousel__control--forward" for="1a"></label>
          </div>
        
        <div class="carousel__track">
          <ul>
            
            <li class="carousel__slide" style="background-image: url('/img/posts/War/Kyiv1.webp');"></li>
            
            <li class="carousel__slide" style="background-image: url('/img/posts/War/Kyiv2.webp');"></li>
            
            <li class="carousel__slide" style="background-image: url('/img/posts/War/Kyiv3.webp');"></li>
            
            <li class="carousel__slide" style="background-image: url('/img/posts/War/Kyiv4.webp');"></li>
            
          </ul>
        </div>
        <div class="carousel__indicators">
            
              <label class="carousel__indicator" for="1a"></label>
            
              <label class="carousel__indicator" for="1b"></label>
            
              <label class="carousel__indicator" for="1c"></label>
            
              <label class="carousel__indicator" for="1d"></label>
            
        </div>
    </div>
</div>

<style>
.carousel__holder {width: 100%; position: relative; padding-bottom: 50%; margin: 1rem 0 1rem;}
.carousel {
  height: 100%;
  width: 100%;
  overflow: hidden;
  text-align: center;
  position: absolute;
  padding: 0;
}
.carousel__controls,
.carousel__activator {
  display: none;
}

.carousel__activator:nth-of-type(1):checked ~ .carousel__track {
  -webkit-transform: translateX(-000%);
          transform: translateX(-000%);
}
.carousel__activator:nth-of-type(1):checked ~ .carousel__slide:nth-of-type(1) {
  transition: opacity 0.5s, -webkit-transform 0.5s;
  transition: opacity 0.5s, transform 0.5s;
  transition: opacity 0.5s, transform 0.5s, -webkit-transform 0.5s;
  top: 0;
  left: 0;
  right: 0;
  opacity: 1;
  -webkit-transform: scale(1);
          transform: scale(1);
}
.carousel__activator:nth-of-type(1):checked ~ .carousel__controls:nth-of-type(1) {
  display: block;
  opacity: 1;
}
.carousel__activator:nth-of-type(1):checked ~ .carousel__indicators .carousel__indicator:nth-of-type(1) {
  opacity: 1;
}

.carousel__activator:nth-of-type(2):checked ~ .carousel__track {
  -webkit-transform: translateX(-100%);
          transform: translateX(-100%);
}
.carousel__activator:nth-of-type(2):checked ~ .carousel__slide:nth-of-type(2) {
  transition: opacity 0.5s, -webkit-transform 0.5s;
  transition: opacity 0.5s, transform 0.5s;
  transition: opacity 0.5s, transform 0.5s, -webkit-transform 0.5s;
  top: 0;
  left: 0;
  right: 0;
  opacity: 1;
  -webkit-transform: scale(1);
          transform: scale(1);
}
.carousel__activator:nth-of-type(2):checked ~ .carousel__controls:nth-of-type(2) {
  display: block;
  opacity: 1;
}
.carousel__activator:nth-of-type(2):checked ~ .carousel__indicators .carousel__indicator:nth-of-type(2) {
  opacity: 1;
}

.carousel__activator:nth-of-type(3):checked ~ .carousel__track {
  -webkit-transform: translateX(-200%);
          transform: translateX(-200%);
}
.carousel__activator:nth-of-type(3):checked ~ .carousel__slide:nth-of-type(3) {
  transition: opacity 0.5s, -webkit-transform 0.5s;
  transition: opacity 0.5s, transform 0.5s;
  transition: opacity 0.5s, transform 0.5s, -webkit-transform 0.5s;
  top: 0;
  left: 0;
  right: 0;
  opacity: 1;
  -webkit-transform: scale(1);
          transform: scale(1);
}
.carousel__activator:nth-of-type(3):checked ~ .carousel__controls:nth-of-type(3) {
  display: block;
  opacity: 1;
}
.carousel__activator:nth-of-type(3):checked ~ .carousel__indicators .carousel__indicator:nth-of-type(3) {
  opacity: 1;
}

.carousel__activator:nth-of-type(4):checked ~ .carousel__track {
  -webkit-transform: translateX(-300%);
          transform: translateX(-300%);
}
.carousel__activator:nth-of-type(4):checked ~ .carousel__slide:nth-of-type(4) {
  transition: opacity 0.5s, -webkit-transform 0.5s;
  transition: opacity 0.5s, transform 0.5s;
  transition: opacity 0.5s, transform 0.5s, -webkit-transform 0.5s;
  top: 0;
  left: 0;
  right: 0;
  opacity: 1;
  -webkit-transform: scale(1);
          transform: scale(1);
}
.carousel__activator:nth-of-type(4):checked ~ .carousel__controls:nth-of-type(4) {
  display: block;
  opacity: 1;
}
.carousel__activator:nth-of-type(4):checked ~ .carousel__indicators .carousel__indicator:nth-of-type(4) {
  opacity: 1;
}


.carousel__control {
  height: 30px;
  width: 30px;
  margin-top: -15px;
  top: 50%;
  position: absolute;
  display: block;
  cursor: pointer;
  border-width: 5px 5px 0 0;
  border-style: solid;
  border-color: #fafafa;
  opacity: 0.35;
  opacity: 1;
  outline: 0;
  z-index: 3;
}
.carousel__control:hover {
  opacity: 1;
}
.carousel__control--backward {
  left: 20px;
  -webkit-transform: rotate(-135deg);
          transform: rotate(-135deg);
}
.carousel__control--forward {
  right: 20px;
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg);
}
.carousel__indicators {
  position: absolute;
  bottom: 20px;
  width: 100%;
  text-align: center;
}
.carousel__indicator {
  height: 15px;
  width: 15px;
  border-radius: 100%;
  display: inline-block;
  z-index: 2;
  cursor: pointer;
  opacity: 0.35;
  margin: 0 2.5px 0 2.5px;
}
.carousel__indicator:hover {
  opacity: 0.75;
}
.carousel__track {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  padding: 0;
  margin: 0;
  transition: -webkit-transform 0.5s ease 0s;
  transition: transform 0.5s ease 0s;
  transition: transform 0.5s ease 0s, -webkit-transform 0.5s ease 0s;
}
.carousel__track .carousel__slide {
  display: block;
  top: 0;
  left: 0;
  right: 0;
  opacity: 1;
}

.carousel__track .carousel__slide:nth-of-type(1) {
  -webkit-transform: translateX(000%);
          transform: translateX(000%);
}

.carousel__track .carousel__slide:nth-of-type(2) {
  -webkit-transform: translateX(100%);
          transform: translateX(100%);
}

.carousel__track .carousel__slide:nth-of-type(3) {
  -webkit-transform: translateX(200%);
          transform: translateX(200%);
}

.carousel__track .carousel__slide:nth-of-type(4) {
  -webkit-transform: translateX(300%);
          transform: translateX(300%);
}


.carousel--scale .carousel__slide {
  -webkit-transform: scale(0);
          transform: scale(0);
}
.carousel__slide {
  height: 100%;
  position: absolute;
  opacity: 0;
  overflow: hidden;
}
.carousel__slide .overlay {height: 100%;}
.carousel--thumb .carousel__indicator {
  height: 30px;
  width: 30px;
}
.carousel__indicator {
  background-color: #fafafa;
}

.carousel__slide:nth-of-type(1),
.carousel--thumb .carousel__indicators .carousel__indicator:nth-of-type(1) {
  background-size: cover;
  background-position: center;
}

.carousel__slide:nth-of-type(2),
.carousel--thumb .carousel__indicators .carousel__indicator:nth-of-type(2) {
  background-size: cover;
  background-position: center;
}

.carousel__slide:nth-of-type(3),
.carousel--thumb .carousel__indicators .carousel__indicator:nth-of-type(3) {
  background-size: cover;
  background-position: center;
}

.carousel__slide:nth-of-type(4),
.carousel--thumb .carousel__indicators .carousel__indicator:nth-of-type(4) {
  background-size: cover;
  background-position: center;
}

</style>

<script>
  function isVisible(el) {
        while (el) {
            if (el === document) {
                return true;
            }

            var $style = window.getComputedStyle(el, null);

            if (!el) {
                return false;
            } else if (!$style) {
                return false;
            } else if ($style.display === 'none') {
                return false;
            } else if ($style.visibility === 'hidden') {
                return false;
            } else if (+$style.opacity === 0) {
                return false;
            } else if (($style.display === 'block' || $style.display === 'inline-block') &&
                $style.height === '0px' && $style.overflow === 'hidden') {
                return false;
            } else {
                return $style.position === 'fixed' || isVisible(el.parentNode);
            }
        }
  }
  
</script>

<p>The zombie people of Russia report that Ukrainian troops are shelling their homes. The whole world should know what Russia, which has invaded our land, is doing. We are defending our own homeland!</p>

<hr />

<h3 id="propaganda">Propaganda</h3>

<p>Russian President Putin and Russian propaganda call Russia‚Äôs aggressive war against Ukraine, which is accompanied by Russia‚Äôs invasion of Ukraine‚Äôs southern, eastern and northern borders, a ‚Äúspecial military operation in the Donbas‚Äù to ‚Äúdemilitarize and denationalize Ukraine. Neo-Nazism is a major theme of pro-Russian propaganda and is attributed to the current Ukrainian government and its allies. In fact, there are no signs of Nazism in Ukraine, including territorial ambitions, state-sponsored terrorism, unbridled anti-Semitism, bigotry, and dictatorship. Putin also said that NATO countries support neo-Nazis.</p>

<center>
<img src="/img/posts/War/Propaganda.webp" alt="Network" class="responsive" style="width: 100%; height: auto;" />
</center>

<p>Russia‚Äôs Federal Service for Supervision of Communications, Information Technology and Mass Communications has called on a number of media outlets to remove ‚Äúinaccurate information about a special military operation by the Russian Armed Forces to protect Donbass.‚Äù Later, at the request of the Prosecutor General‚Äôs Office, Roskomnadzor blocked access to the Internet resources of the Echo of Moscow radio station and the Dozhd TV channel. The Nastoyaschee Vremya TV channel, created by Radio Svoboda with the participation of Voice of America, Echo of Moscow radio station, The Village radio station, Taiga.info, DOXA, DOXA, The New Times and a number of Ukrainian TV channels, was also blocked. publications.
Deputies of the State Duma of the Russian Federation approved in the first reading amendments to the Criminal Code to 15 years in prison for ‚Äúmisinformation about the actions of the Armed Forces of the Russian Federation in military operations.‚Äù</p>

<hr />

<p>No one will ever forgive you for that! Glory to Ukraine!</p>

<center>
<img src="/img/posts/War/UkraineFlag.png" alt="Network" class="responsive" style="width: 100%; height: auto;" />
</center>]]></content><author><name>Soloviov Ivan</name></author><category term="personal" /><summary type="html"><![CDATA[The war came to my Ukraine]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://0.0.0.0:4000/img/posts/War/image.jpg" /><media:content medium="image" url="http://0.0.0.0:4000/img/posts/War/image.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="en"><title type="html">Databases for programmers - Part 3 üóÇÔ∏è</title><link href="http://0.0.0.0:4000/for-the-programmer-part3/" rel="alternate" type="text/html" title="Databases for programmers - Part 3 üóÇÔ∏è" /><published>2021-12-20T12:10:39+00:00</published><updated>2021-12-20T12:10:39+00:00</updated><id>http://0.0.0.0:4000/for-the-programmer-part3</id><content type="html" xml:base="http://0.0.0.0:4000/for-the-programmer-part3/"><![CDATA[<p>In this post, I want to show the connection of the sample results vertically and show some examples of sorting and limiting the sample results. I urge you to repeat all the commands I have given in the examples and modify them to suit your needs. This way you will better understand and assimilate the material. Let‚Äôs start without words. Enjoy reading üëã!</p>

<center>
<img src="/img/posts/Database3/DB.png" alt="Network" class="responsive" style="width: 65%; height: auto;" />
</center>

<hr />

<h3 id="combining-results-vertically">Combining results vertically</h3>
<p>Let‚Äôs learn to work with samples as sets and learn to combine them. To do this, we need a function that will help us know which elements are in the set.
Let‚Äôs start with the fact that we, for example, need to know what are the unique values for the column with the appropriate ratio, that is, for the table. Find out how many unique senders we have.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="k">distinct</span> <span class="n">user_from_id</span> <span class="k">from</span> <span class="n">user_private_message</span><span class="p">;</span>
</code></pre></div></div>

<p>And we get a result whose value is not repeated. In this case, we use <code class="language-plaintext highlighter-rouge">distinct</code> simply as a keyword, but it can be used as a function - passing it some value. Now, moving on to our task, let‚Äôs find out the number of unique senders. To do this, we will use the already familiar function <code class="language-plaintext highlighter-rouge">count</code>.</p>

<figure class="highlight"><pre><code class="language-sql" data-lang="sql"><span class="k">select</span> <span class="k">count</span><span class="p">(</span><span class="k">distinct</span> <span class="n">user_from_id</span><span class="p">)</span> <span class="k">from</span> <span class="n">user_private_message</span><span class="p">;</span> </code></pre></figure>

<p>And we get the number in numerical form.
Here we take our table and take each column from it, select the <code class="language-plaintext highlighter-rouge">user_from_id</code> field and accumulate some hash set with <code class="language-plaintext highlighter-rouge">district</code>. Then, we transfer the accumulated value to our aggregation function <code class="language-plaintext highlighter-rouge">count</code>. Thus, we counted the number of unique values.</p>

<table class="table table-responsive">
  <thead>
    <tr>
      <th style="text-align: center">select count(distinct user_from_id)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">177</td>
    </tr>
  </tbody>
</table>

<p>We can test our sample. Namely, check whether the unique values are really output. We can implement this with the help of <code class="language-plaintext highlighter-rouge">if</code>. It is worth recalling that in the last request, we received all the unique <code class="language-plaintext highlighter-rouge">ID</code> from <code class="language-plaintext highlighter-rouge">user_from_id</code>.</p>

<figure class="highlight"><pre><code class="language-sql" data-lang="sql"><span class="k">select</span> <span class="k">count</span>
<span class="p">(</span><span class="k">distinct</span> <span class="n">if</span><span class="p">(</span><span class="n">user_from_id</span> <span class="o">=</span> <span class="mi">8609</span><span class="p">,</span> <span class="mi">8592</span><span class="p">,</span> <span class="n">user_from_id</span><span class="p">))</span>
<span class="k">from</span> <span class="n">user_private_message</span><span class="p">;</span></code></pre></figure>

<p>And we get the following result:</p>

<table class="table table-responsive">
  <thead>
    <tr>
      <th style="text-align: center">count(distinct if(user_from_id = 8609,8592, user_from_id))</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">176</td>
    </tr>
  </tbody>
</table>

<p>We take the last number - 8609, and replace it with 8592. That is, the full query <code class="language-plaintext highlighter-rouge">IF</code> sounds like this, if the column <code class="language-plaintext highlighter-rouge">user_from_id</code> is 8609, then replace it with 8592, but if not - just return its value <code class="language-plaintext highlighter-rouge">if (user_from_id = 8609, 8592, user_from_id)</code>.
Looking at the table above, we see that the number of users decreased by one, respectively, the replacement worked and the sampling test passed as we expected.</p>

<p>It is also worth returning to <code class="language-plaintext highlighter-rouge">distinct</code> because it can work as a function and a keyword.
Now we can set the task - to get unique pairs of sender and recipient.</p>

<figure class="highlight"><pre><code class="language-sql" data-lang="sql"> <span class="k">select</span> <span class="k">distinct</span>
 <span class="n">user_from_id</span><span class="p">,</span> <span class="n">user_to_id</span> 
 <span class="k">from</span> <span class="n">user_private_message</span><span class="p">;</span></code></pre></figure>

<p>And we will get unique couples who talked to each other. Now in order to count, you just need to use <code class="language-plaintext highlighter-rouge">count</code>.</p>

<p>Now count the number of unique users who send and receive messages. (There are users who have never received or written messages) And we need to count how many unique users we have in private discussions. We have already written queries about senders and recipients, but we can combine two queries into one using union.</p>

<figure class="highlight"><pre><code class="language-sql" data-lang="sql"><span class="k">select</span> <span class="n">user_from_id</span> 
<span class="k">from</span> <span class="n">user_private_message</span>
<span class="k">union</span> <span class="k">select</span> <span class="n">user_to_id</span> 
<span class="k">from</span> <span class="n">user_private_message</span><span class="p">;</span> </code></pre></figure>

<p><code class="language-plaintext highlighter-rouge">Union</code> - works as a combination of two sets of results. That is, it first finds all the unique values and then combines them into some result set. Thus, it is not necessary to write <code class="language-plaintext highlighter-rouge">distinct</code> for each request. That is, the SQL engine sees that we have two queries and we need to combine their results. So get only unique value results.
Also, if we need to merge tapes without any filtering. To do this, we need to write <code class="language-plaintext highlighter-rouge">all</code> after<br />
<code class="language-plaintext highlighter-rouge">Union</code>.</p>

<figure class="highlight"><pre><code class="language-sql" data-lang="sql"><span class="k">select</span> <span class="n">user_from_id</span> <span class="k">from</span> <span class="n">user_private_message</span>
<span class="k">union</span> <span class="k">all</span> <span class="k">select</span> <span class="n">user_to_id</span>
<span class="k">from</span> <span class="n">user_private_message</span><span class="p">;</span> </code></pre></figure>

<p>After that, we will display data with duplicates.</p>

<hr />

<h3 id="sorting-and-limiting-sampling-results">Sorting and limiting sampling results</h3>
<p>Very often it is used to organize page-by-page output of results. For example, the first query we reviewed the first ten results and the next query we want to select the next 10 results (ie already skip the first ten results).
Sorting is not something complicated, it‚Äôs just a flexible tool.</p>

<p>We can sort the result of any sample by the value of a field or several fields. We can also sort in ascending or descending order. Of course, we can sort this way only by the fields in which there is a comparison operation (ie more or less). But because we know MySQL, including relational databases, they have the ability to predictably convert the values ‚Äã‚Äãof various fields so that we can use these operations (more or less). Used in aggregate functions, or in the sortings I will be using now.</p>

<p>Let‚Äôs start with the simplest task, try to sort the values ‚Äãin the message cell by date of reading. And at the same time we learn how sorting works with values ‚Äã‚Äãthat are not yet specified, ie <code class="language-plaintext highlighter-rouge">null</code>. Here is my sort request:</p>

<figure class="highlight"><pre><code class="language-sql" data-lang="sql"><span class="k">select</span> <span class="n">message_id</span><span class="p">,</span> <span class="n">read_time</span> 
<span class="k">from</span> <span class="n">user_private_message</span> 
<span class="k">order</span> <span class="k">by</span> <span class="n">read_time</span><span class="p">;</span></code></pre></figure>

<p>The key word here is <code class="language-plaintext highlighter-rouge">order by</code>, after this word we indicate which column will be sorted. By default, they are sorted in ascending order. That is, the fields with <code class="language-plaintext highlighter-rouge">null</code> will be displayed first.</p>

<p>If we want to sort not in ascending order, but in descending order, we will use the <code class="language-plaintext highlighter-rouge">desc</code> attribute. That is what the query will look like:</p>

<figure class="highlight"><pre><code class="language-sql" data-lang="sql"><span class="k">select</span> <span class="n">message_id</span><span class="p">,</span> <span class="n">read_time</span>
<span class="k">from</span> <span class="n">user_private_message</span> 
<span class="k">order</span> <span class="k">by</span> <span class="n">read_time</span> <span class="k">desc</span><span class="p">;</span></code></pre></figure>

<p>Also after the keyword <code class="language-plaintext highlighter-rouge">order by</code> we can list some rules by which there will be sorting. For example, we sort users by whether this user is active or not <code class="language-plaintext highlighter-rouge">(is_active)</code>, and by username. Here is the query:</p>

<figure class="highlight"><pre><code class="language-sql" data-lang="sql"><span class="k">select</span> <span class="n">user_id</span><span class="p">,</span> <span class="n">first_name</span><span class="p">,</span> <span class="n">is_active</span> 
<span class="k">from</span> <span class="k">user</span> <span class="k">order</span> <span class="k">by</span> <span class="n">is_active</span><span class="p">,</span> <span class="n">first_name</span> <span class="k">desc</span><span class="p">;</span></code></pre></figure>

<p>So, <code class="language-plaintext highlighter-rouge">select user_id,first_name, is_active</code> - sort by <code class="language-plaintext highlighter-rouge">user</code> id, name and field <code class="language-plaintext highlighter-rouge">is_active</code>. First, we sort by <code class="language-plaintext highlighter-rouge">is_active</code> and by name <code class="language-plaintext highlighter-rouge">first_name</code> sort in descending order.</p>

<table class="table table-responsive">
  <thead>
    <tr>
      <th style="text-align: center">user_id</th>
      <th style="text-align: center">first_name</th>
      <th style="text-align: center">is_active</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">7525</td>
      <td style="text-align: center">Zorana</td>
      <td style="text-align: center">0</td>
    </tr>
    <tr>
      <td style="text-align: center">8385</td>
      <td style="text-align: center">Wilhelmus</td>
      <td style="text-align: center">0</td>
    </tr>
    <tr>
      <td style="text-align: center">7498</td>
      <td style="text-align: center">Sanjeet</td>
      <td style="text-align: center">0</td>
    </tr>
    <tr>
      <td style="text-align: center">8163</td>
      <td style="text-align: center">Saige</td>
      <td style="text-align: center">0</td>
    </tr>
    <tr>
      <td style="text-align: center">8103</td>
      <td style="text-align: center">Zachariah</td>
      <td style="text-align: center">1</td>
    </tr>
    <tr>
      <td style="text-align: center">7635</td>
      <td style="text-align: center">Zach</td>
      <td style="text-align: center">1</td>
    </tr>
    <tr>
      <td style="text-align: center">7883</td>
      <td style="text-align: center">Yvet</td>
      <td style="text-align: center">1</td>
    </tr>
    <tr>
      <td style="text-align: center">8589</td>
      <td style="text-align: center">Yvet</td>
      <td style="text-align: center">1</td>
    </tr>
  </tbody>
</table>

<p>Here we see our sorting by <code class="language-plaintext highlighter-rouge">is_active</code>. Our sample was divided into two groups, inactive users (in which the attribute <code class="language-plaintext highlighter-rouge">is_active = 0</code>) and active. That is, first we sort by <code class="language-plaintext highlighter-rouge">is_active</code> and already within this group is sorted by name. And the second group, in which <code class="language-plaintext highlighter-rouge">is_active = 1</code>, usernames are sorted in descending order. If we come across several identical names and want to sort them by adding the appropriate attributes to our query, then sorting for them will take place according to the third rule.</p>

<p>Also, which is quite convenient, we can sort by simply specifying the column numbers.</p>

<figure class="highlight"><pre><code class="language-sql" data-lang="sql"><span class="k">select</span> <span class="n">user_id</span><span class="p">,</span> <span class="n">first_name</span><span class="p">,</span> <span class="n">is_active</span> 
<span class="k">from</span> <span class="k">user</span> <span class="k">order</span> <span class="k">by</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span> <span class="k">desc</span><span class="p">;</span> </code></pre></figure>

<p>Here we sort the 3rd and 2nd columns in descending order.</p>

<p>Let‚Äôs understand exactly how sorting takes place.</p>

<figure class="highlight"><pre><code class="language-sql" data-lang="sql"><span class="k">select</span> <span class="n">user_id</span><span class="p">,</span> <span class="n">first_name</span><span class="p">,</span> <span class="n">is_active</span> 
<span class="k">from</span> <span class="k">user</span> <span class="k">order</span> <span class="k">by</span> <span class="n">is_active</span><span class="p">,</span> <span class="n">first_name</span> <span class="k">desc</span><span class="p">;</span></code></pre></figure>

<p>And so, our DBMS, selects each tape from <code class="language-plaintext highlighter-rouge">user</code>, then selects from this tape <code class="language-plaintext highlighter-rouge">user_id, first_name</code> - those fields which are necessary for sampling, and those fields <code class="language-plaintext highlighter-rouge">order by is_active, first_name</code> - which are necessary for sorting. And as it is iterated by the results of the sample, it simply sorts these results <code class="language-plaintext highlighter-rouge">order by is_active, first_name</code> and as the results will be sorted, gives them to the client.</p>

<p>Thus, we can use as a field for sorting, the result of a function.</p>

<figure class="highlight"><pre><code class="language-sql" data-lang="sql"><span class="k">select</span> <span class="n">first_name</span><span class="p">,</span> <span class="n">reverse</span><span class="p">(</span><span class="n">first_name</span><span class="p">)</span> 
<span class="k">from</span> <span class="k">user</span> <span class="k">order</span> <span class="k">by</span> <span class="n">reverse</span><span class="p">(</span><span class="n">first_name</span><span class="p">)</span> <span class="k">desc</span><span class="p">;</span></code></pre></figure>

<p>In this sample, we simply pass our value to the `reverse ‚Äòfunction, followed by sorting.</p>

<table class="table table-responsive">
  <thead>
    <tr>
      <th style="text-align: center">first_name</th>
      <th style="text-align: center">reverse(first_name)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">Jean-guy</td>
      <td style="text-align: center">yug-naeJ</td>
    </tr>
    <tr>
      <td style="text-align: center">Chastity</td>
      <td style="text-align: center">ytitsahC</td>
    </tr>
    <tr>
      <td style="text-align: center">Clarity</td>
      <td style="text-align: center">ytiralC</td>
    </tr>
    <tr>
      <td style="text-align: center">Garry</td>
      <td style="text-align: center">yrraG</td>
    </tr>
    <tr>
      <td style="text-align: center">Jinny</td>
      <td style="text-align: center">ynniJ</td>
    </tr>
    <tr>
      <td style="text-align: center">Elhamy</td>
      <td style="text-align: center">ymahlE</td>
    </tr>
  </tbody>
</table>

<p>We can also limit the result of the sample. Sometimes, we don‚Äôt need to load the server to give us gigabytes of data. This is done using the command <code class="language-plaintext highlighter-rouge">limit</code>.</p>

<figure class="highlight"><pre><code class="language-sql" data-lang="sql"><span class="k">select</span> <span class="n">user_id</span><span class="p">,</span> <span class="n">first_name</span> <span class="k">from</span> <span class="k">user</span> 
<span class="k">order</span> <span class="k">by</span> <span class="n">first_name</span> <span class="k">limit</span> <span class="mi">3</span><span class="p">;</span></code></pre></figure>

<p>Here are the results we got:</p>

<table class="table table-responsive">
  <thead>
    <tr>
      <th style="text-align: center">user_id</th>
      <th style="text-align: center">first_name</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">7914</td>
      <td style="text-align: center">Achamma</td>
    </tr>
    <tr>
      <td style="text-align: center">7605</td>
      <td style="text-align: center">Addie</td>
    </tr>
    <tr>
      <td style="text-align: center">7705</td>
      <td style="text-align: center">Adrianna</td>
    </tr>
  </tbody>
</table>

<p>So what‚Äôs going on on the DBMS side? MySQL from the <code class="language-plaintext highlighter-rouge">user</code> table starts selecting all the columns we have, and then starts sorting them using<code class="language-plaintext highlighter-rouge"> order by</code>. And as soon as it sorts all the columns in our table, ie in our query results, it simply takes the first 3 columns from this temporary table and returns them to the client, ie it does not return all the remaining queries.</p>

<p>If we take another example, we will simply output 10 users without sorting. In this case, the database begins to look at all the data stored in the <code class="language-plaintext highlighter-rouge">user</code> table, but begins to collect results until it rests on our limit, or until the data in the table runs out. This is very useful when we are familiar with a database and we need to review some information to roughly understand what data we have stored.</p>

<p>Also keep in mind that there are two modes to the limit. In the second mode, we can enter two numbers. That is, if we enter a limit of 10, 5, we will skip the first ten results and output five.</p>]]></content><author><name>Soloviov Ivan</name></author><category term="sql" /><summary type="html"><![CDATA[Combining selection and sorting and constraints of results]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://0.0.0.0:4000/img/posts/Database3/DB.png" /><media:content medium="image" url="http://0.0.0.0:4000/img/posts/Database3/DB.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="en"><title type="html">Databases for programmers - Part 2üóÇÔ∏è</title><link href="http://0.0.0.0:4000/SQL-for-programmer-part2/" rel="alternate" type="text/html" title="Databases for programmers - Part 2üóÇÔ∏è" /><published>2021-12-08T13:10:39+00:00</published><updated>2021-12-08T13:10:39+00:00</updated><id>http://0.0.0.0:4000/SQL-for-programmer-part2</id><content type="html" xml:base="http://0.0.0.0:4000/SQL-for-programmer-part2/"><![CDATA[<p>In the last post, I described the work of simple server requests to the database. A minimal set of theories for understanding what we are dealing with was also described. Considered simple SELECT queries where we filtered data using WHERE. In this post, I would like to demonstrate the use of simple and aggregate functions. Maybe now it seems to you that everything is very easy, but so it is. It is true that we have not yet made any changes to our tables and created new ones, but this is just the beginning üòä.</p>

<center>
<img src="/img/posts/Database2/DB.png" alt="Network" class="responsive" style="width: 65%; height: auto;" />
</center>

<hr />

<h3 id="using-simple-functions">Using simple functions</h3>

<p>First of all, I would like to say that SQL has many built-in functions to perform various tasks. I would like to demonstrate the most commonly used functions. Also, if you need to write a specific request and you do not have enough features to be covered in this article, you can always visit the official documentation.
Also, because there are so many examples to choose from, I chose only the most interesting ones, in my opinion, to move faster and not overload with information. Maybe I can‚Äôt write short yet, but I‚Äôm learning üôÑ.</p>

<h4 id="if-functionÔ∏è"><code class="language-plaintext highlighter-rouge">IF</code> function‚öôÔ∏è</h4>

<p>So, in the table <code class="language-plaintext highlighter-rouge">discussion_group</code> we have a cell<code class="language-plaintext highlighter-rouge"> approve_required</code>, which stores user registration confirmations in the form of zeros and ones. And we need to get users out. To do this, we will use the operator <code class="language-plaintext highlighter-rouge">if</code>.</p>

<p>select if(approve_required, ‚Äòrequired‚Äô, ‚Äò‚Äô), 
approve_required from discussion_group;</p>

<p>Here is the result of the query:</p>

<table class="table table-responsive">
  <thead>
    <tr>
      <th style="text-align: center">if(approve_required, ‚Äòrequired‚Äô, ‚Äò‚Äô)</th>
      <th>approve_required from</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">required</td>
      <td>1</td>
    </tr>
    <tr>
      <td style="text-align: center">¬†</td>
      <td>0</td>
    </tr>
    <tr>
      <td style="text-align: center">required</td>
      <td>1</td>
    </tr>
    <tr>
      <td style="text-align: center">required</td>
      <td>1</td>
    </tr>
    <tr>
      <td style="text-align: center">¬†</td>
      <td>0</td>
    </tr>
  </tbody>
</table>

<p>We see that our function is displayed in the column name. We can change this to normal with the <code class="language-plaintext highlighter-rouge">as</code> operator.</p>

<p>Also, in the next example, we will go to the column <code class="language-plaintext highlighter-rouge">disscusion_group</code>, where we will define the old and new groups. The query will look like this: <br /></p>

<figure class="highlight"><pre><code class="language-sql" data-lang="sql"> <span class="k">select</span> <span class="n">group_id</span> <span class="k">as</span> <span class="n">ID</span> <span class="p">,</span> <span class="n">creation_time</span> <span class="k">as</span> <span class="n">CreationData</span> <span class="p">,</span>
  <span class="n">if</span><span class="p">(</span><span class="n">creation_time</span> <span class="o">&gt;</span> <span class="s1">'2020-01-01'</span><span class="p">,</span> <span class="s1">'new'</span><span class="p">,</span> <span class="s1">'old'</span><span class="p">)</span>
  <span class="k">as</span> <span class="k">Type</span> <span class="k">from</span> <span class="n">discussion_group</span><span class="p">;</span></code></pre></figure>

<p>If the creation date is greater than <code class="language-plaintext highlighter-rouge">2020.01.01</code> it is new, otherwise - old. Here is the result:</p>

<table class="table table-responsive">
  <thead>
    <tr>
      <th>ID</th>
      <th style="text-align: center">CreationData</th>
      <th style="text-align: center">Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>570779</td>
      <td style="text-align: center">2018-12-21 00:39:04</td>
      <td style="text-align: center">old</td>
    </tr>
    <tr>
      <td>570890</td>
      <td style="text-align: center">2019-12-25 00:40:09</td>
      <td style="text-align: center">old</td>
    </tr>
    <tr>
      <td>570853</td>
      <td style="text-align: center">2019-12-29 00:39:04</td>
      <td style="text-align: center">old</td>
    </tr>
    <tr>
      <td>570863</td>
      <td style="text-align: center">2020-05-17 00:39:05</td>
      <td style="text-align: center">new</td>
    </tr>
    <tr>
      <td>570922</td>
      <td style="text-align: center">2021-01-13 00:39:04</td>
      <td style="text-align: center">new</td>
    </tr>
    <tr>
      <td>570888</td>
      <td style="text-align: center">2021-03-02 00:39:04</td>
      <td style="text-align: center">new</td>
    </tr>
  </tbody>
</table>
<p>As you can see from the request, we renamed our cells to normal.</p>

<h4 id="coalesce-functionÔ∏è"><code class="language-plaintext highlighter-rouge">COALESCE</code> function‚öôÔ∏è</h4>

<p>The SQL language has functions such as <code class="language-plaintext highlighter-rouge">COALESCE</code> and<code class="language-plaintext highlighter-rouge"> ISNULL</code>, which check the input parameters of <code class="language-plaintext highlighter-rouge">NULL</code>.</p>

<p>We receive messages from the table <code class="language-plaintext highlighter-rouge">user_private_message</code>, which were read after a certain date. But not all messages have a read date, so we will use the reference date for unread messages and will use this date in the condition. Here we can use the <code class="language-plaintext highlighter-rouge">coalesce</code> function in<code class="language-plaintext highlighter-rouge"> where</code> conditions.</p>

<figure class="highlight"><pre><code class="language-sql" data-lang="sql"> <span class="k">Select</span> <span class="n">message_id</span><span class="p">,</span> <span class="n">user_from_id</span><span class="p">,</span>
  <span class="n">user_to_id</span> <span class="k">from</span> <span class="n">user_private_message</span>
  <span class="k">where</span> <span class="n">coalesce</span><span class="p">(</span><span class="n">read_time</span><span class="p">,</span> <span class="n">send_time</span><span class="p">)</span> <span class="o">&gt;</span> <span class="s1">'2020-10-20'</span><span class="p">;</span></code></pre></figure>

<p>Here is the result of the query:</p>

<table class="table table-responsive">
  <thead>
    <tr>
      <th style="text-align: center">message_id</th>
      <th style="text-align: center">user_from_id</th>
      <th style="text-align: center">user_to_id</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">6521171</td>
      <td style="text-align: center">8425</td>
      <td style="text-align: center">7838</td>
    </tr>
    <tr>
      <td style="text-align: center">6521181</td>
      <td style="text-align: center">8144</td>
      <td style="text-align: center">8328</td>
    </tr>
    <tr>
      <td style="text-align: center">6521186</td>
      <td style="text-align: center">7614</td>
      <td style="text-align: center">7720</td>
    </tr>
    <tr>
      <td style="text-align: center">6521190</td>
      <td style="text-align: center">7960</td>
      <td style="text-align: center">7817</td>
    </tr>
    <tr>
      <td style="text-align: center">6521200</td>
      <td style="text-align: center">7683</td>
      <td style="text-align: center">8163</td>
    </tr>
    <tr>
      <td style="text-align: center">6521207</td>
      <td style="text-align: center">7490</td>
      <td style="text-align: center">8533</td>
    </tr>
  </tbody>
</table>
<p>I think everything is clear here. Let‚Äôs move on to the CONCAT functions.</p>

<h4 id="concat-functionÔ∏è"><code class="language-plaintext highlighter-rouge">CONCAT</code> function‚öôÔ∏è</h4>

<p>This feature helps to glue cells. For example, we can glue the cell <code class="language-plaintext highlighter-rouge">firstname</code> and<code class="language-plaintext highlighter-rouge"> lastname</code> - creating the following query:</p>

<figure class="highlight"><pre><code class="language-sql" data-lang="sql"><span class="k">select</span> <span class="n">concat</span><span class="p">(</span><span class="n">first_name</span><span class="p">,</span> <span class="s1">' '</span><span class="p">,</span> <span class="n">last_name</span><span class="p">)</span> <span class="k">as</span> <span class="n">Name</span> <span class="k">from</span> <span class="k">user</span><span class="p">;</span> </code></pre></figure>

<p>And get the following result:</p>

<table class="table table-responsive">
  <thead>
    <tr>
      <th style="text-align: center">Name</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">Carla Mariet</td>
    </tr>
    <tr>
      <td style="text-align: center">Sophy Brags</td>
    </tr>
    <tr>
      <td style="text-align: center">Ivan Soloviov</td>
    </tr>
    <tr>
      <td style="text-align: center">Doug Anne marie</td>
    </tr>
  </tbody>
</table>

<p>I think everything is clear here and we can move on to our aggregate functions.</p>

<hr />

<h2 id="aggregate-sql-functions">Aggregate SQL functions</h2>

<p>First of all, SQL aggregate functions act on column values in order to obtain a single resulting value.
Consider aggregate functions on the example of <code class="language-plaintext highlighter-rouge">COUNT</code>.</p>

<h4 id="count-function"><code class="language-plaintext highlighter-rouge">COUNT</code> functionüî©</h4>

<p>In this example, let‚Äôs count how many messages we have sent and how many of them have been read. We will do this with the following query:</p>

<figure class="highlight"><pre><code class="language-sql" data-lang="sql"> <span class="k">select</span> <span class="k">count</span><span class="p">(</span><span class="o">*</span><span class="p">)</span> <span class="k">from</span> <span class="n">user_private_message</span> 
  <span class="k">where</span> <span class="n">read_time</span> <span class="k">is</span> <span class="k">not</span> <span class="k">null</span> <span class="p">;</span></code></pre></figure>

<p>Here we have counted how many messages have been sent and read. That is, we counted only those columns in which there is no <code class="language-plaintext highlighter-rouge">null</code>, in the table<code class="language-plaintext highlighter-rouge"> user_private_message</code>. First we send the cell <code class="language-plaintext highlighter-rouge">from user_private_message</code> and then we filter it (<code class="language-plaintext highlighter-rouge"> where read_time is not null</code>) and send it to our <code class="language-plaintext highlighter-rouge">count (*)</code>.
In this case, when we use an asterisk, we select all the cells and load them into memory.
Now if we pass instead of an asterisk, a parameter, the request will look like this:</p>

<figure class="highlight"><pre><code class="language-sql" data-lang="sql"> <span class="k">select</span> <span class="k">count</span><span class="p">(</span><span class="n">read_time</span><span class="p">)</span> <span class="k">from</span> <span class="n">user_private_message</span><span class="p">;</span></code></pre></figure>

<p>That is, we can estimate how much more compact our request has become. <br />
üí° <strong>Also worth remembering! Many programmers use such an optimization ‚Äúchip‚Äù, passing in <code class="language-plaintext highlighter-rouge">count (1)</code> unit. That is, when choosing from a table, we do not use intermediate memory, just for each cell we perform a function <code class="language-plaintext highlighter-rouge">count (1)</code>, which does not require any values (it just adds +1 to some aggregate value). Thus, we do not use the buffer to store values that we are not even going to return from the database.</strong></p>

<p>There are also such functions as: <code class="language-plaintext highlighter-rouge">Average</code>,<code class="language-plaintext highlighter-rouge"> Min</code>, <code class="language-plaintext highlighter-rouge">Max</code>,<code class="language-plaintext highlighter-rouge"> Sum</code>. I will not describe these functions, because their name is clear. You can easily find them online. I apologize for this, but if we paint each function, we will never go to the most interesting and complex functionsüòâ.</p>

<h4 id="cast-function"><code class="language-plaintext highlighter-rouge">CAST</code> functionüî©</h4>

<p>And finally, let‚Äôs consider just an interesting function <code class="language-plaintext highlighter-rouge">CAST</code>. This function allows you to convert an expression from one data type to another and it is not aggregate. Click on me <a href="https://docs.microsoft.com/ru-ru/sql/t-sql/functions/cast-and-convert-transact-sql?view=sql-server-ver15"><code class="language-plaintext highlighter-rouge">CAST</code></a>, if you want to know more about the function and the arguments it can take.</p>

<p>In many old databases, the year was written in only two digits. With the help of cast, we can convert that data into a new format.</p>

<figure class="highlight"><pre><code class="language-sql" data-lang="sql"> <span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="k">cast</span><span class="p">(</span><span class="nv">"21"</span><span class="k">as</span> <span class="nb">year</span><span class="p">);</span></code></pre></figure>

<p>And get the following answer to our request:</p>

<table class="table table-responsive">
  <thead>
    <tr>
      <th style="text-align: center">cast(‚Äú21‚Äùas year)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">2021</td>
    </tr>
  </tbody>
</table>

<p>So far, we have considered only one aggregate function, which I found quite interesting. If you want to know more about them, follow this <a href="https://www.sqlservertutorial.net/sql-server-aggregate-functions/">link</a>.</p>

<hr />

<p>So, this post may seem a bit confusing, but I advise you to reproduce all the queries that have been made in this post. This will help you better understand how these queries work. Experiment and use the documentation, but be careful. Because if you installed SQL Server according to my example (<a href="https://www.soloviov.fun/sql/tech/translated/SQL-for-the-programmer/">from the previous article</a>), you can break the server since we work as a <code class="language-plaintext highlighter-rouge">root</code> user with unlimited access rights on the server. See you in the next postüëãüòâ.</p>]]></content><author><name>Soloviov Ivan</name></author><category term="sql" /><summary type="html"><![CDATA[Consider simple and aggregate functions]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://0.0.0.0:4000/img/posts/Database2/DB.png" /><media:content medium="image" url="http://0.0.0.0:4000/img/posts/Database2/DB.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="en"><title type="html">Databases for programmers - Part 1üóÇÔ∏è</title><link href="http://0.0.0.0:4000/SQL-for-the-programmer/" rel="alternate" type="text/html" title="Databases for programmers - Part 1üóÇÔ∏è" /><published>2021-12-02T17:10:39+00:00</published><updated>2021-12-02T17:10:39+00:00</updated><id>http://0.0.0.0:4000/SQL-for-the-programmer</id><content type="html" xml:base="http://0.0.0.0:4000/SQL-for-the-programmer/"><![CDATA[<p><a href="https://dev.mysql.com/doc/"><img src="/img/posts/Database/SQL.png" style="width:128px;max-width:100%;" align="right" /></a>
I recently started studying databases, namely SQLü§ì. Based on this, I want to share with you the information I learned during my studies. I will continue to write about this topic, as it is impossible to describe everything in one post. I would also like to say in advance that I view databases from a programmer and how to use them for a programmerüë®‚Äçüíª. This will not be a technical guide that will help you learn SQL, but I hope that I can interest people who know nothing about databases and perhaps show something new to people who work with them.</p>

<p><img src="/img/posts/Database/imageDatabase.webp" alt="Network" class="responsive" style="width: 100%; height: auto;" /></p>

<hr />

<h3 id="a-little-theory-">A little theory ü•±</h3>

<p>To begin with, as always, you need to understand the terminology. Unfortunately, no way without it. So, first of all, it is necessary to define what a database is? <br />
 A <code class="language-plaintext highlighter-rouge">database</code> is a data that is organized according to certain rules and which can be managed following certain rules.</p>

<p>A common example of a database is the folder hierarchy on your hard drive. You usually organize these folders according to your own rules, such as photo folders that are neatly packaged by year in your operating system.</p>

<p>This example will help us understand what a DBMS is. After all, a database management system, we can imagine as your operating system, which contains folders with photos.<br />
 A <mark>database management system (DBMS)</mark> is a software tool that allows you to create and use a database. Finally, it‚Äôs time to define SQL. It is a declarative language of structured queries, which is used to manage data in relational databases. SQL databases are built on a relational model, ie data can be stored in tables that are logically related to each other through common values, so there is no need for additional information to link them together. One of the most important features of SQL databases is that they are normalized. This means that there are at least two tables in each SQL database that should be combined if possible, as this reduces redundancy and simplifies data entry.</p>

<hr />

<h3 id="commands-to-interact-with-the-server-">Commands to interact with the server üíæ</h3>

<p>So, to work with databases, I installed a docker with an SQL server. Instructions for installing and configuring this program can
<a href="https://docs.docker.com/get-started/"><img src="/img/posts/Database/docker.png" style="width:128px;max-width:100%;" align="right" /></a> be found online. It will also not be difficult to find a test database, which you can download to your Docker server. 
If you downloaded Docker, but do not know how to start a container with a MySQL server, just enter the command in the terminal - <code class="language-plaintext highlighter-rouge">docker pull mysql</code>.  Then, to start the container with the image and parameters, write in the terminal - <code class="language-plaintext highlighter-rouge">docker run --name example-mysql -e MYSQL_ROOT_PASSWORD = pass -d mysql</code>. You can enter any name instead of ‚Äúexample‚Äù. In the future, to connect to our database you will need to enter the command - <code class="language-plaintext highlighter-rouge">docker exec -it example-mysql mysql -uroot -ppass</code>. <br />
Now here are some commands to interact with our server:</p>
<ul>
  <li>View databases on the server - (<code class="language-plaintext highlighter-rouge">show databases;</code>)</li>
  <li>Switch to the database - (<code class="language-plaintext highlighter-rouge">use nameDatabase;</code>)</li>
  <li>View tables in the database - (<code class="language-plaintext highlighter-rouge">show tables;</code>)</li>
  <li>View columns - (<code class="language-plaintext highlighter-rouge">describe Example;</code>)</li>
</ul>

<p>Next, if you find a test database on the Internet, to import a new dump, use the command - <code class="language-plaintext highlighter-rouge">docker exec -i example-mysql mysql -uroot -ppass &lt;example.sql</code>. In this case, example.sql is the file name of our dump. And we enter the same command to import data by changing the file name. Of course, you can find another way to install SQL Server without Docker. I‚Äôm just demonstrating how I installed the server SQL.</p>

<hr />

<h3 id="simple-select-query-Ô∏è">Simple SELECT query üå™Ô∏è</h3>

<p>It is also worth remembering that SQL is a declarative language, meaning that we do not give a command to the compiler or interpreter of the language, but we describe the desired result we want to get.</p>

<p>Of course, my first query to the database was the well-known Select. It looked something like this - <code class="language-plaintext highlighter-rouge">select * from table_name;</code>. I don‚Äôt know if I need to explain this query, but it may be interesting for someone who doesn‚Äôt know SQL at all. Asterisk <mark>"*"</mark> means that we get all the data entered in the table, well, respectively, <mark>"From"</mark> means from which table.</p>

<p>We can also retrieve data from multiple columns by renaming them at once. It should be noted that these requests do not make any changes to the server. Entering such a command on the server <br />
<code class="language-plaintext highlighter-rouge">SELECT name NewName, example as NewID FROM example;</code><br />
We will get about this result in the terminal.</p>

<table class="table table-responsive">
  <thead>
    <tr>
      <th>NewName</th>
      <th>NewID</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Value 1</td>
      <td>0</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>Value 2</td>
      <td>1</td>
    </tr>
  </tbody>
</table>

<p>Having analyzed this query, you can understand the logic of almost all SQL queries. The query sounds something like this - select data from the name column (<mark>NewName</mark> in this case is not an explicit renaming of the column in the output), and the example column (where the keyword <mark>as</mark> means explicitly renaming the example column to <mark>NewID</mark>), from the example table.
We can also perform mathematical operations on numbers on the server (I do not know who needs it, but it interestingly demonstrates the capabilities of MySQL). For example, write the following query: <br />
 <code class="language-plaintext highlighter-rouge">select 5/3 as result;</code> <br />
 and get the result of the division which is displayed in the column <mark>"result"</mark>.</p>

<table class="table table-responsive">
  <thead>
    <tr>
      <th>result</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1.6667</td>
    </tr>
  </tbody>
</table>

<p>It does not sound very complicated, because it is a simple request to the server to obtain information from the database. In my practice, I have noticed that most SQL database server queries are simple select queries without using aggregate functions. But there are times when you need to write specific queries to get data that can be filtered right away or something.</p>

<hr />

<h3 id="filter-results-with-where-">Filter results with WHERE üí°</h3>

<p>I selected a user table to filter the results. This will demonstrate the operation of the where parameter. For example, I have a table with the names and details of users of a site. Let‚Äôs say I want to get single-user data. My query will look like this: <br />
<code class="language-plaintext highlighter-rouge">select * from user where first_name = 'Madelle';</code><br />
 Here we select everything from the user table and then use the <mark>"where"</mark> keyword wherein the <mark>first_name</mark> column we look for the name Madelle. Now we have not received all the information about the user but simply filtered it among all users. We can also get the information we need about this user - <br /> <code class="language-plaintext highlighter-rouge">select first_name, last_name, user_id from user where first_name = 'Madelle';</code> <br />
  Where we create a request to the server to get the user <mark>ID</mark> in the system, <mark>name</mark>, and <mark>surname</mark>. And this is the result we get.</p>

<table class="table table-responsive">
  <thead>
    <tr>
      <th>first_name</th>
      <th>last_name</th>
      <th>user_id</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Madelle</td>
      <td>Jonathan</td>
      <td>8209</td>
    </tr>
  </tbody>
</table>

<p>If you remove this condition, we can display the name, surname, and id of all users of the site, which are entered into the database - <code class="language-plaintext highlighter-rouge">select first_name, last_name, user_id from user;</code>. <br />
In general, <mark>‚Äúwhere‚Äù</mark> is a very flexible tool. It can meet almost any data filtering need. I will not list all the possibilities of the parameter, but I will demonstrate the most interesting in my opinion, which can be applied in real life.</p>

<p>Imagine we have a database of users who have given us their email address and we need to filter it by domain. We will display all users who have a domain zone e-mail ‚Äúgmail.com‚Äù.
I will enter the following query: <br />
 <code class="language-plaintext highlighter-rouge">Select email, user_id from user where email like '%@gmail.com';</code>. <br />
The keyword here is <mark>"like"</mark> and the symbol <mark>"%"</mark> means that before the beginning of the tape (ie up to %) we can have as many characters as we want. This is the conclusion we will get in the terminal.</p>

<table class="table table-responsive">
  <thead>
    <tr>
      <th>email</th>
      <th>user_id</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>soloviov.ia@gmail.com</td>
      <td>7498</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>mnda@gmail.com</td>
      <td>7515</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>annekey@gmail.com</td>
      <td>7519</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>alexey@gmail.com</td>
      <td>7601</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>sofi.grabova@gmail.com</td>
      <td>7908</td>
    </tr>
  </tbody>
</table>

<p>Also, for a better understanding of the <mark>%</mark> sign, I would like to give a few small examples. We will also filter users. Let‚Äôs list the users whose name starts with the letter <mark>"A"</mark> <br />
 <code class="language-plaintext highlighter-rouge">select first_name, last_name, user_id from user where first_name like 'A%';</code> <br />
  Here we see that the <mark>%</mark> sign is located after the letter, and it means that after the beginning of the line we can have as many characters as we want. Another small example where we filter users at the beginning and end of the feed is <br />
  <code class="language-plaintext highlighter-rouge">select first_name, last_name, user_id from user where first_name like 'A% e';</code>.</p>

<p>Here I think it is clear that the tape should start on <mark>"A"</mark> and end on <mark>"e"</mark>. We can also filter users by id in which the id is less than 8000:<br />
<code class="language-plaintext highlighter-rouge">select email, user_id from user where user_id &lt;8000;</code>. <br />
We can also filter users by registration date, in ranges of specific calendar dates. My user table records the date the user registered.<br />
 <code class="language-plaintext highlighter-rouge">(select email, registration_time from user where registration_time between '2019-01-31' and '2020-01-01';)</code><br />
  The keywords here are <mark>"between"</mark> and <mark>"and"</mark>. And we get all the users who have been registered in this period.</p>

<p>I have a cell <code class="language-plaintext highlighter-rouge">in_active</code> which stores a variable of type <code class="language-plaintext highlighter-rouge">int</code>. It holds the values ‚Äã‚Äã‚Äù1‚Äù and ‚Äú0‚Äù. We can derive all values ‚Äã‚Äãwhere the variable is a unit value.<br />
This is what my request to the server looks like: <br />
 <code class="language-plaintext highlighter-rouge">select user_id, is_active from user where is_active = true;</code>. <br />
 It should be explained that SQL is smart enough to understand that the so-called <code class="language-plaintext highlighter-rouge">true</code> flag is one and the <code class="language-plaintext highlighter-rouge">false</code> flag is zero.</p>

<p>Finally, I would like to demonstrate the work of the query, where we can combine several conditions. The query will look like this: <br />
<code class="language-plaintext highlighter-rouge">select first_name, is_active from user where (is_active = true and first_name like 'A%') or (is_active = false and last_name like '% n');</code> <br />
And we will receive such an answer to the request.</p>

<table class="table table-responsive">
  <thead>
    <tr>
      <th>first_name</th>
      <th>is_active</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Ammit</td>
      <td>1</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>Addie</td>
      <td>1</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>Agnesse</td>
      <td>1</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>Anna-diane</td>
      <td>0</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>Adrianna</td>
      <td>0</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>Modesta</td>
      <td>0</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>Noellyn</td>
      <td>0</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>Amandi</td>
      <td>1</td>
    </tr>
  </tbody>
</table>

<p>Now scroll through this query in your head, and think about why we received such data.üòá</p>

<hr />

<p>So, in this post, which is the first in a series of posts about SQL for a programmer, I shared with you my knowledge of building queries on the server and some theoretical knowledgeüòâ. My article should not be taken as an educational one. After all, I would not like to take on such a responsibilityüòè. In any case, I advise you to use Google! In the next post, I will try to tell you about the use of simple and aggregate functions. See you in the next postüëã!</p>]]></content><author><name>Soloviov Ivan</name></author><category term="sql" /><summary type="html"><![CDATA[In this post, we will look at simple server requests SQL]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://0.0.0.0:4000/img/posts/Database/imageDatabase.jpg" /><media:content medium="image" url="http://0.0.0.0:4000/img/posts/Database/imageDatabase.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="en"><title type="html">Perception of the world through the prism of recommendationsüïπÔ∏è</title><link href="http://0.0.0.0:4000/recommendations/" rel="alternate" type="text/html" title="Perception of the world through the prism of recommendationsüïπÔ∏è" /><published>2021-11-16T22:10:39+00:00</published><updated>2021-11-16T22:10:39+00:00</updated><id>http://0.0.0.0:4000/recommendations</id><content type="html" xml:base="http://0.0.0.0:4000/recommendations/"><![CDATA[<p>YouTube has said it takes its responsibility for supporting diverse opinions seriously, while reducing the spread of ‚Äúharmful misinformation‚Äù. ‚ÄúMore than 70% of the time you spend watching a huge Google video hosting site is attracted to one of the service‚Äôs recommendations based on artificial intelligence‚Äù, said YouTube Chief Product Officer Neal Mohan.</p>

<p><img src="/img/posts/Recommendations/recommendation.jpg" alt="Network" class="responsive" style="width: 100%; height: auto;" /></p>

<hr />

<p>Also, if you watch a video on YouTube from a mobile device, the average viewing session lasts about 60 minutes.
These statistics are really impressive, because as of 2021, the average number of users of the service is more than 2.3 billion people worldwide.YouTube also reached 50 million (more than the population of Ukraine) paid subscribers to YouTube Music and Premium. Should you continue to share YouTube‚Äôs success statistics to understand the impact of Google?</p>

<p>But can YouTube really control the spread of ‚Äúmalicious misinformation‚Äù and guarantee the spread of different opinions on the platform? YouTube reports that as of 2021, the recommended videos on the site‚Äôs home page are the main source of traffic.</p>

<p>This topic is more interesting to me from a philosophical point of view. After all, the algorithm of recommendations of the platform is based on your preferences. You may have noticed when the main service recommendations page displays content based on what you‚Äôve viewed before. It seems to me that this helps us to stay with our thoughts, not listening to alternative opinions and statements. By the example of the American people, we can clearly demonstrate the intolerance of alternative and critical thinking.
Black Lives Matter, racism, feminism and many other phenomena ‚Äúon the lips‚Äù of the population. Is this a long-term upbringing of the young population by algorithms of recommendations? Did the recommendation algorithms help you to sit in your ‚Äúpaper house‚Äù without accepting alternative opinions? This is probably a question for philosophical science.</p>

<p><img src="/img/posts/Recommendations/PaperHouse.jpg" alt="Paperhous" class="responsive" style="width: 100%; height: auto;" />
<small>¬©Paperhous 1988</small></p>

<hr />

<p>Also of interest is the topic of controlling the spread of ‚Äúmalicious information‚Äù. I remain a fan of content filtering. Filtering horrible things that are unfortunately present in the network. However, the interesting fact remains that someone decided for me that this content is bad for me.
Maybe Jack Patrick Dorsey (known as the creator of Twitter) - decided that Donald Trump‚Äôs content is too harmful for me on Twitter and decided to block it before the US presidential election?
Could it be that Mark Zuckerberg (a well-known developer of outright bad products) decided to block certain political bloggers in America and around the world in order to protect me from bad content?
Large social networks, giant corporations, have extremely great power over people and their thoughts. They can make us think in a way that is beneficial to a certain circle of faces. It may sound like a conspiracy theory, but I don‚Äôt believe in them and I don‚Äôt advise youüòâ.</p>

<p><img src="/img/posts/Recommendations/Mark.jpg" alt="Network" class="Mark" style="width: 100%; height: auto;" /></p>

<hr />

<p>Have the algorithms of recommendations changed the political system of states? - Definitely! Now, the more you are in the media circle, the more political points you have. The more your video recommends the algorithm, the better you are known. The more you watch the video with Joseph Biden Jr., the more recommendations you get with him. One component of propaganda is repetition, and in the end a person forms his vision and does not accept alternative opinions, hanging labels on people with the words ‚Äúand with him everything is clear - a liberal!‚Äù. And of course, you can always block political opponents in the network, the main thing is to know the right people and have enough resources for it.</p>

<p><img src="/img/posts/Recommendations/Politics.jpg" alt="HouseofCards" class="responsive" style="width: 100%; height: auto;" />
<small>¬©House of Cards 2013</small></p>

<hr />
<p>Also, movies and TV series always help, giving people the appropriate patterns of behavior in different situations. ‚ÄúWe are for everything good and against everything bad!‚Äù - such models of behavior are shown in movies, and determine where is bad and where is good. Of course, no one intended to impose anything on us, but unfortunately we always perceive the actions of the protagonist as a pattern of behavior that we use in life (who we are if not robots? üòÇ). But of course there are exceptions, such as ‚ÄúRescue Private Ryan‚Äù and many other films that promote the war for their country and the undeniable rightness of the American military. Although this does not negate the fact that the picture is really beautiful.</p>

<p><img src="/img/posts/Recommendations/Saving.jpg" alt="Saving" class="responsive" style="width: 100%; height: auto;" /></p>

<hr />

<p>So the recommendations still help a person find the content that interests him, or make him ignorant? You decide! This post should not be taken as truth in last resort. I just wanted to  the hook reader, or even shock him, in order to make him think.</p>]]></content><author><name>Soloviov Ivan</name></author><category term="personal" /><summary type="html"><![CDATA[Recommendations help a person to find content of interest to him, or make him ignorant?]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://0.0.0.0:4000/img/posts/Recommendations/recommendation.jpg" /><media:content medium="image" url="http://0.0.0.0:4000/img/posts/Recommendations/recommendation.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="en"><title type="html">Neural networks - entertainment or something more?üåé</title><link href="http://0.0.0.0:4000/neural-network/" rel="alternate" type="text/html" title="Neural networks - entertainment or something more?üåé" /><published>2021-11-08T13:17:39+00:00</published><updated>2021-11-08T13:17:39+00:00</updated><id>http://0.0.0.0:4000/neural-network</id><content type="html" xml:base="http://0.0.0.0:4000/neural-network/"><![CDATA[<p>Hi, in this post I would like to share interesting sites with you. Some work with a neural network, and some are just coolüòâ.Consider this post as the top cool sites that will hardly ever come in handy in real life, <a href="https://thiscatdoesnotexist.com/"><strong>but if you like looking at cats, then why not</strong></a>üòè (just refresh the page). In the end, I also wanted to talk a little about neural networks and what it is for a programmer.</p>

<p><img src="/img/posts/NeuralNetwork/neuralNetwork.jpeg" alt="Network" class="responsive" /></p>
<style>
    .responsive {
    width: 100%;
    height: auto;
}
</style>

<hr />

<h3 id="clipdrop---create-professional-product-visuals-without-a-photo-studio"><a href="https://clipdrop.co/">ClipDrop</a> - create professional product visuals without a photo studioüî•</h3>
<p>This neural network transfers objects from your smartphone camera to your computer. You can click on the title and you will be taken to the site. There you will see an example of how this application works. In order to try it, you need to download the application to your phone and computer. To connect  the mobile and the desktop, you just need to login with the same method on both device. For instance if you used the ‚ÄúGoogle sign in methods‚Äù, you should sign in with this methods on both devices.</p>

<p>üí°<strong>The app is currently in closed beta testing, but you can easily fill out a google form to   give you access to pre-release testing.</strong></p>

<hr />

<h3 id="disappearing---removing-people-from-complex-backgrounds-in-real-time-using-tensorflow"><a href="https://disappearing-people.glitch.me/">Disappearing</a> - removing people from complex backgrounds in real time using TensorFlowüî•üî•</h3>
<p>A simple neural network using the TensorFlow library. Just turn on the camera and wait a little. The longer you move in front of the camera, the better you will be cut out of the background.This is a great demonstration of how neural networks work.ü§ü
I also mentioned that TensorFlow is used here. TensorFlow is an end-to-end open source platform for machine learning. It has a comprehensive, flexible ecosystem of tools, libraries, and community resources that lets researchers push the state-of-the-art in ML and developers easily build and deploy ML-powered applications. 
If you are interested, you can go to the <a href="https://github.com/tensorflow/tensorflow">github project repository</a> where the source code is located and install it into your project.üí™</p>

<hr />

<h3 id="image-inpainting---lets-you-edit-images-with-a-smart-retouching-brush"><a href="https://www.nvidia.com/research/inpainting/">Image Inpainting</a> - lets you edit images with a smart retouching brushüî•</h3>
<p>This application uses the power of NVIDIA GPUs and deep learning algorithms to replace any portion of the image. You can upload your photo there and retouch it, or even cut out entire objects. I do not know how innovative this application is, because such functions are already provided by Google algorithms in the <a href="https://play.google.com/store/apps/details?id=com.niksoftware.snapseed&amp;hl=uk&amp;gl=US">Snapseed</a> smartphone application. In this application, you can also perform such retouching.</p>

<p>But it‚Äôs still very interesting, here‚Äôs how I cut myself out of the background:
<img src="/img/posts/NeuralNetwork/Screen08.15.05.jpg" alt="Nature" class="responsive" />
Agree, it looks good. Of course, this can be done much more carefully. Try it!üëç</p>

<hr />

<h3 id="gnod---gives-recommendations-on-the-data-you-give-"><a href="https://www.gnod.com/">Gnod</a> - gives recommendations on the data you give üî•üî•üî•</h3>
<p>This service can help solve the problem ‚Äúwhat to see?‚Äù, ‚ÄúWhat to listen to?‚Äù, ‚ÄúWhat to buy?‚Äù, ‚ÄúWhat to read?‚Äù and may even recommend seeing pictures that you might like. When you get to the site, choose a category. Here are the categories to choose from:</p>
<ul>
  <li>GNOD Music</li>
  <li>GNOD Products</li>
  <li>GNOD Art</li>
  <li>GNOD Literature</li>
  <li>GNOD Movies</li>
</ul>

<p>For example, let‚Äôs choose the category of movies. Gnod will ask you to fill out a short form of your preferences and based on this will make recommendations to you.üòÆ</p>

<hr />

<h3 id="emupedia---great-site-to-play-old-games-"><a href="https://emupedia.net/beta/emuos/">Emupedia</a> - great site to play old games üî•üî•üî•üî•üî•</h3>
<p>By going to this site you will be stuck on it for a long time (as it was with me).It provides a great opportunity to remember and play old games. Please log in from your computer, as it is terrible on smartphones.
When you get to the site, choose an operating system and play, it‚Äôs really cool!üëçüëç
Here is a screenshot of the desktop with game icons:
<img src="/img/posts/NeuralNetwork/Screen08.16.22.jpg" alt="Nature" class="responsive" />
You can even play Doom and Quake!ü§Ø</p>

<hr />

<h3 id="a-little-about-neural-networks-">A little about neural networksüåé üí§</h3>
<p>Back in 1943, the first model of an artificial neural network was invented by an American neurophysiologist, one of the fathers of cybernetics, <a href="https://en.wikipedia.org/wiki/Warren_Sturgis_McCulloch">Warren McCulloch</a>, and a neurolinguist, logician and mathematician <a href="https://en.wikipedia.org/wiki/Walter_Pitts">Walter Pitts</a>. Their idea was that neurons are devices operating in binary numbers, a kind of simplest processors connected to each other.
Already in 1957, the famous American scientist in the field of psychology and neurophysiology, <a href="https://en.wikipedia.org/wiki/Frank_Rosenblatt">Frank Rosenblatt</a>, developed the perceptron - a model of information perception by the brain based on a learning neural network. A couple of years later, he created a working machine, the Mark-1, the first neurocomputer. He was able to recognize some of the letters written on cards that were brought up to his camera eyes.</p>
<h4 id="my-opinion">My opinionüòâ</h4>
<p>From the above, we can already say that the idea of neural networks is not new for a long time. But it has been gaining popularity in recent years due to the expanding computer industry.
I cannot share with everyone this hype about piece intelligence. Since it seems to me that now he is at a fairly low level of development. All businessmen are used to talking about neural networks to maximize profits. Look at any development in which there is even a word about a neural network and you will see that it really attracts investments from people who do not understand what it is about at all.</p>

<hr />

<h3 id="how-artificial-intelligence-can-help-a-programmer">How artificial intelligence can help a programmer‚ùì</h3>
<p>Understand, at this stage I cannot say that I am a professional programmer, so you should not rely on my words. I believe that artificial intelligence (now) cannot replace a programmer, but it can help him in development. I formed this opinion after looking at the report of <a href="https://www.yegor256.com/">Yegor Bugaenko</a> (this link leads to his blog).
For me as a programmer, it would really be cool if artificial intelligence could help me do unit tests and validate my code, give me advice or something like that.
Of course, he will analyze millions of lines of code and give me recommendations based on this. How does google or youtube give me recommendations based on my preferences. Even if he could decompose the problem for me, it would greatly simplify development and save time.</p>

<hr />

<p>This post was written with the intention of drawing some attention to my blog. I also encourage you to write me comments and likeüëç if you liked what you read.
Also write what you think about neural networks in the comments, it will be very interesting to me! See you in the next postüôÇüñêÔ∏è</p>]]></content><author><name>Soloviov Ivan</name></author><category term="tips" /><summary type="html"><![CDATA[The most interesting sites with a neural network in my opinion.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://0.0.0.0:4000/img/posts/NeuralNetwork/neuralNetwork.jpeg" /><media:content medium="image" url="http://0.0.0.0:4000/img/posts/NeuralNetwork/neuralNetwork.jpeg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">First postüëã</title><link href="http://0.0.0.0:4000/first-post/" rel="alternate" type="text/html" title="First postüëã" /><published>2021-11-07T17:04:39+00:00</published><updated>2021-11-07T17:04:39+00:00</updated><id>http://0.0.0.0:4000/first-post</id><content type="html" xml:base="http://0.0.0.0:4000/first-post/"><![CDATA[<p>This is the first post on my new blog and the desire to say hello üëã</p>

<p>Therefore, there is nothing specific here. I want to describe a bit of the possibilities of my blog.</p>

<p>On the main page of the site, at the top of the page you can see the attachment <a href="https://www.soloviov.fun/posts/">‚ÄúPosts‚Äù</a>, in this section are all the articles on the site, which are sorted by date, respectively, each new post is displayed at the top.
On the <a href="https://www.soloviov.fun/about/">‚ÄúAbout‚Äù</a> page you can read information about me and download my resume in a format convenient for you.
Going to the <a href="https://www.soloviov.fun/contact/">contacts page</a> you have the opportunity to fill out the feedback form and I will definitely write to you.‚úèÔ∏è</p>

<p>If you are reading this post, you may notice ‚ÄúShare on ‚Ä¶‚Äù buttons at the top. They will help you share my posts on their social networks.
Also above the ‚ÄúShare on ‚Ä¶‚Äù buttons there are category buttons, click on the category you get to the category page, where you can see all the inscribing categories and articles, try it üî•</p>

<p>I also encourage you to write me comments and like if you liked what you read.</p>]]></content><author><name>Soloviov Ivan</name></author><category term="jekyll" /><summary type="html"><![CDATA[This is the first post on my new blog and the desire to say hello]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://0.0.0.0:4000/img/posts/FirstPost/hello.jpg" /><media:content medium="image" url="http://0.0.0.0:4000/img/posts/FirstPost/hello.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>